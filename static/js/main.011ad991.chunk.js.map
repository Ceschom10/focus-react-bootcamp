{"version":3,"sources":["Components/ClassExample.js","Components/ClassWithLifeCycleExample.js","Components/ClassWithStateExample.js","Components/FunctionExample.js","Components/FunctionWithStateExample.js","Containers/Main.js","Containers/StateVsProps/CalcPropExample.js","Containers/StateVsProps/CalcStateExample.js","Containers/StateVsProps/ClassCalcPropExample.js","Containers/StateVsProps/ClassCalcStateExample.js","Containers/StateVsProps/PropExample.js","Containers/StateVsProps/StateExample.js","Containers/StateVsProps/index.js","Containers/ThinkingInReact/data.js","Containers/ThinkingInReact/Context.js","Containers/ThinkingInReact/Components.js","Containers/ThinkingInReact/index.js","Containers/JSXExample/index.js","Containers/TodoExample/data.js","Containers/TodoExample/Context.js","Containers/TodoExample/Item.js","Containers/TodoExample/List.js","Containers/TodoExample/NavBar.js","Containers/TodoExample/index.js","Containers/APIInteractions/Blog/Context.js","Containers/APIInteractions/Blog/Album.js","Containers/APIInteractions/Blog/Albums.js","Containers/APIInteractions/Blog/Post.js","Containers/APIInteractions/Blog/Posts.js","Containers/APIInteractions/Blog/Users.js","Containers/APIInteractions/Blog/index.js","Components/Grommet/Spinner.js","Containers/APIInteractions/Countries/Country.js","Containers/APIInteractions/Countries/List.js","Containers/APIInteractions/Countries/index.js","Containers/APIInteractions/Users/index.js","Containers/APIInteractions/index.js","redux/actions.js","Containers/ReduxExample/Employees.js","Containers/ReduxExample/Form.js","Containers/ReduxExample/index.js","Containers/ReduxToolkit/Profile.js","Containers/ReduxToolkit/SidebarLayer.js","redux/reducers/appSlice.js","Containers/ReduxToolkit/Profiles.js","Containers/ReduxToolkit/thunks.js","Containers/ReduxToolkit/index.js","Containers/ReactQuery/Products.js","Containers/ReactQuery/Products2.js","Containers/ReactQuery/Users/FormUser.js","Containers/ReactQuery/Users/index.js","Containers/ReactQuery/utils.js","Containers/ReactQuery/index.js","Containers/Contentful/Components/BaseList.js","Containers/Contentful/Context/SearchContext.js","Containers/Contentful/sdk.js","Containers/Contentful/Courses/index.js","Containers/Contentful/Records/index.js","Containers/Contentful/Movies/index.js","Containers/Contentful/Components/SearchBar.js","Containers/Contentful/index.js","Components/Routing/NoMatch.js","Components/Routing/index.js","Components/Routing/utils.js","Components/Routing/Menu.js","Components/Routing/NavBar.js","App.js","serviceWorker.js","redux/data.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["ClassExample","className","Component","ClassWithLifeCycleExample","props","state","text","visits","interval","console","log","this","setInterval","setState","prevProps","prevState","clearInterval","ClassWithStateExample","FunctionExample","FunctionWithStateExample","useState","setVisits","useEffect","currentVisits","Main","clear","setClear","timer","setTimeout","clearTimeout","Grid","Box","align","pad","horizontal","areas","name","start","end","columns","rows","gap","fill","gridArea","background","CalcPropExample","result","str","num1","num2","op","Function","error","alert","Text","Heading","level","margin","color","Button","type","icon","Refresh","onClick","label","CalcStateExample","setNum1","setNum2","setOp","direction","TextInput","placeholder","value","onChange","e","target","map","opType","key","active","ClassCalcPropExample","ClassCalcStateExample","handleChange","PropExample","animal","onRemove","border","size","round","elevation","alignSelf","hoverIndicator","FormClose","id","List","primaryKey","secondaryKey","data","group","StateExample","animals","setAnimals","oldAnimals","filter","wrap","toString","Form","onSubmit","values","Math","floor","random","FormField","required","component","Select","options","primary","StateVsProps","PRODUCTS","category","price","stocked","ProductContext","createContext","ProductProvider","products","setProducts","Provider","children","ProductTable","useContext","DataTable","property","header","search","render","product","resizeable","SearchBar","setSearch","checked","setChecked","criteria","results","rs","toLowerCase","includes","query","CheckBox","chk","toggle","ThinkingInReact","Black","style","height","width","backgroundColor","Magenta","WebkitBorderRadius","Blue","transform","Lightgreen","borderRadius","JSXExample","setBackgroundColor","colors","setColors","content","event","charAt","toUpperCase","slice","option","onKeyDown","keyCode","oldColors","TODOS","description","dateTo","completed","TodosContext","TodosProvider","todos","setTodos","Category","Item","todo","update","remove","vertical","textDecorationLine","fontStyle","fontWeight","DateTime","fromISO","toLocaleString","DATE_HUGE","categories","list","months","weeks","days","hours","getCategory","diff","local","toObject","updatedData","items","item","length","NavBar","DateInput","format","TodoExample","BlogContext","BlogProvider","users","setUsers","selectedUser","setSelectedUser","Album","album","handleOnClick","open","setOpen","isOpen","weight","title","left","photos","photo","Image","fit","src","thumbnailUrl","alt","Albums","albums","setAlbums","Axios","get","then","catch","err","fetchPhotos","currentAlbums","Comment","comment","email","body","Post","post","addComment","commentText","setCommentText","truncate","comments","postId","parseInt","Posts","posts","setPosts","fetchComments","currentPosts","Users","user","Card","CardHeader","User","CardBody","username","CardFooter","Blog","Anchor","href","spinning","version","viewBox","opacity","d","attributeName","from","to","dur","repeatCount","Spinner","justify","Country","country","flag","demonym","capital","countries","alpha3Code","Countries","isLoading","setIsLoading","isError","setIsError","setCountries","searchFor","setSearchFor","setQuery","fetchCountries","useCallback","a","response","val","labelKey","valueKey","reduce","lang","useQuery","gender","UserFemale","created_at","DATETIME_MED","APIInteractions","Tabs","Tab","openSideForm","payload","setSelectedEmployeeId","actions","removeEmployee","connect","employees","root","UserAdd","Actions","employee","FormEdit","userId","plain","defaultValue","firstName","lastName","jobTitle","region","phoneNumber","addEmployee","updateEmployee","selectedEmployee","find","selectedEmployeeId","initialValues","setValue","nextValue","onReset","undefined","FormAdd","FormTrash","formIsOpen","Profile","profile","Avatar","avatar","first_name","last_name","job","Edit","Close","SidebarLayer","onClose","handleCreate","Layer","position","full","modal","onEsc","onClickOutside","overflow","appSlice","createSlice","initialState","profiles","reducers","setData","action","addUser","push","updateUser","removeUser","index","findIndex","splice","Profiles","openSidebar","setOpenSidebar","useSelector","app","dispatch","useDispatch","modifiedData","handleRemove","delete","Apps","handleUpdate","onUpdate","ReduxToolkit","Products","setLoading","setError","fetchProducts","footer","datum","discount_amount","status","StatusGood","StatusDisabled","Products2","queryError","FormUser","flex","MaskedInput","mask","regexp","fixed","RadioButtonGroup","as","useMutation","headers","Authorization","onSuccess","queryCache","invalidateQueries","info","onError","postUser","Sync","updated_at","Like","Dislike","ReactQuery","Reactjs","GraphQl","BaseList","count","Stack","anchor","image","file","url","a11yTitle","SearchContext","SearchProvider","searchString","setSearchString","client","contentful","space","accessToken","getEntries","entries","content_type","coursesTransformer","recordsTransformer","moviesTransformer","courses","dataTransformer","fields","sys","records","tracklist","track","movies","poster","cast","actor","createdAt","Courses","setCourses","retrieveCourses","Records","setRecords","retrieveRecords","Movies","setMovies","retrieveMovies","Nav","Search","Contentful","activeIndex","URLSearchParams","useLocation","System","Spotify","Ticket","NoMatch","location","pathname","Routing","exact","path","routes","Home","Html5","Code","Task","Node","Connect","VmMaintenance","CloudSoftware","Menu","route","theme","global","secondary","brand","controls","default","font","family","card","container","AppBar","tag","right","zIndex","App","showSidebar","setShowSidebar","Grommet","ResponsiveContext","Consumer","Collapsible","initialIsOpen","Boolean","window","hostname","match","employeeCode","emailAddress","lastCode","rootReducer","concat","employeeIndex","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","reducer","store","configureStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.011ad991.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ClassExample extends Component {\n  render() {\n    /**\n     * We construct here the portion of the html that will be rendered\n     */\n    return (\n      <div className=\"App-example\">\n        <p>Hi, I'm a class</p>\n      </div>\n    );\n  }\n}\n\nexport default ClassExample;\n","import React, { Component } from 'react';\n\nclass ClassWithLifeCycleExample extends Component {\n  constructor(props) {\n    super(props);\n\n    /**\n     * We initialize state and class variables here\n     */\n    this.state = {\n      text: 'Hello there!',\n      visits: 0,\n    };\n\n    this.interval = null;\n  }\n\n  componentWillMount() {\n    /**\n     * This will executed right before the component is mounted\n     */\n    console.log('I will mount');\n  }\n\n  componentDidMount() {\n    /**\n     * This will be executed once the component has been mounted\n     */\n    console.log('I just mounted');\n\n    this.interval = setInterval(() => {\n      this.setState((state) => {\n        return {\n          visits: state.visits + 1,\n        };\n      });\n    }, 3000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    /**\n     * This is executed everytime props or state have changes\n     */\n    console.log('I was updated. I will render again');\n  }\n\n  componentWillUnmount() {\n    /**\n     * This will executed right before the component is unmounted\n     */\n    console.log('I will unmount');\n    clearInterval(this.interval);\n  }\n\n  render() {\n    /**\n     * We construct here the portion of the html that will be rendered\n     */\n    return (\n      <div className=\"App-example\">\n        <p>{this.state.text}</p>\n        <span>Visits: {this.state.visits}</span>\n      </div>\n    );\n  }\n}\n\nexport default ClassWithLifeCycleExample;\n","import React, { Component } from 'react';\n\nclass ClassWithStateExample extends Component {\n  constructor(props) {\n    super(props);\n\n    /**\n     * We initialize state and class variables here\n     */\n    this.state = {\n      text: 'Hello there!',\n      visits: 0,\n    };\n  }\n\n  render() {\n    /**\n     * We construct here the portion of the html that will be rendered\n     */\n    return (\n      <div className=\"App-example\">\n        <p>{this.state.text}</p>\n        <span>Visits: {this.state.visits}</span>\n      </div>\n    );\n  }\n}\n\nexport default ClassWithStateExample;\n","import React from 'react';\n\nfunction FunctionExample() {\n  /**\n   * We construct here the portion of the html that will be rendered\n   * then we return JSX code\n   */\n  return (\n    <div className=\"App-example\">\n      <p>Hi, I'm a function</p>\n    </div>\n  );\n}\n\nexport default FunctionExample;\n","import React, { useEffect, useState } from 'react';\n\nfunction FunctionWithStateExample() {\n  /**\n   * We add state to functions using hooks\n   * We use \"useState\" to declare a state variable\n   */\n  const [text] = useState('Hello there! enjoying React?');\n  const [visits, setVisits] = useState(0);\n\n  /**\n   * We use \"useEffect\" to execute code when\n   * * component has been mounted\n   * * state variables have changed value\n   * * component will unmount\n   */\n  useEffect(() => {\n    /**\n     * Executing effect\n     * We will increment visits every 3 seconds\n     * Interval will init 3 seconds after component was mounted\n     */\n    const interval = setInterval(() => {\n      setVisits((currentVisits) => currentVisits + 1);\n    }, 3000);\n\n    return () => {\n      /**\n       * This code will be executed right before component\n       * gets unmounted\n       * We clear interval here to avoid effect to be executed\n       * after component no longer exists\n       */\n      clearInterval(interval);\n      console.log('I will be unmounted, bye!');\n    };\n  }, []);\n\n  /**\n   * We construct here the portion of the html that will be rendered\n   * then we return JSX code\n   */\n  return (\n    <div className=\"App-example\">\n      <p>Hi, I'm a function</p>\n\n      <p>{text}</p>\n\n      <span>Visits: {visits}</span>\n    </div>\n  );\n}\n\nexport default FunctionWithStateExample;\n","import { Box, Grid } from 'grommet';\nimport React, { useEffect, useState } from 'react';\nimport ClassExample from '../Components/ClassExample';\nimport ClassWithLifeCycleExample from '../Components/ClassWithLifeCycleExample';\nimport ClassWithStateExample from '../Components/ClassWithStateExample';\nimport FunctionExample from '../Components/FunctionExample';\nimport FunctionWithStateExample from '../Components/FunctionWithStateExample';\n\nfunction Main() {\n  const [clear, setClear] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setClear(true);\n    }, 16000);\n\n    return () => {\n      /**\n       * Clear the timer, or you'll get an error\n       * timer will continue working even after component\n       * has been unmounted, to avoid that lacky of memory, we use\n       * the cleaunp of useEffect\n       */\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <Grid>\n      <Box align=\"stretch\" pad={{ horizontal: 'large' }}>\n        <Grid\n          areas={[\n            { name: 'main1', start: [0, 0], end: [0, 0] },\n            { name: 'main2', start: [0, 1], end: [0, 1] },\n            { name: 'main3', start: [0, 2], end: [0, 2] },\n            { name: 'main4', start: [0, 3], end: [0, 3] },\n            { name: 'main5', start: [0, 4], end: [0, 4] },\n          ]}\n          columns={['large']}\n          rows={['flex', 'flex', 'flex', 'flex', 'flex']}\n          gap=\"small\"\n          fill\n        >\n          <Box gridArea=\"main1\" background=\"secondary\" pad=\"medium\">\n            <ClassExample />\n          </Box>\n          <Box gridArea=\"main2\" background=\"secondary\" pad=\"medium\">\n            <ClassWithStateExample />\n          </Box>\n          {!clear && (\n            <Box gridArea=\"main3\" background=\"primary\" pad=\"medium\">\n              <ClassWithLifeCycleExample />\n            </Box>\n          )}\n          <Box gridArea=\"main4\" background=\"secondary\" pad=\"medium\">\n            <FunctionExample />\n          </Box>\n          {!clear && (\n            <Box gridArea=\"main5\" background=\"primary\" pad=\"medium\">\n              <FunctionWithStateExample />\n            </Box>\n          )}\n        </Grid>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default Main;\n","import { Box, Button, Heading, Text } from 'grommet';\nimport { Refresh } from 'grommet-icons';\nimport React from 'react';\n\nfunction parse(str) {\n  // eslint-disable-next-line no-new-func\n  return Function(`'use strict'; return (${str})`)();\n}\n\nfunction CalcPropExample({ num1, num2, op, clear }) {\n  let result;\n  try {\n    result = parse(`${num1}${op}${num2}`);\n  } catch (error) {\n    alert('There was an error!');\n  }\n\n  return (\n    <Box pad=\"xsmall\">\n      <Text>The result is</Text>\n      <Heading level=\"1\" margin=\"none\" color=\"controls\">\n        {result}\n      </Heading>\n      <Button\n        type=\"button\"\n        color=\"defult\"\n        icon={<Refresh />}\n        onClick={clear}\n        label=\"Clear?\"\n      />\n    </Box>\n  );\n}\n\nexport default CalcPropExample;\n","import { Box, Button, Heading, TextInput } from 'grommet';\nimport React, { useState } from 'react';\nimport CalcPropExample from './CalcPropExample';\n\nfunction CalcStateExample() {\n  const [num1, setNum1] = useState(0);\n  const [num2, setNum2] = useState(0);\n  const [op, setOp] = useState('+');\n\n  const clear = () => {\n    setNum1(0);\n    setNum2(0);\n    setOp('+');\n  };\n\n  return (\n    <Box pad=\"small\">\n      <Heading level=\"3\" margin=\"none\" color=\"light-1\">\n        Hey look!, a tiny small calculator!\n      </Heading>\n\n      <Box pad=\"xsmall\" direction=\"row\">\n        <TextInput\n          type=\"number\"\n          placeholder=\"first numer\"\n          value={num1}\n          onChange={(e) => setNum1(e.target.value)}\n        />\n        <TextInput\n          type=\"number\"\n          placeholder=\"second numer\"\n          value={num2}\n          onChange={(e) => setNum2(e.target.value)}\n        />\n        {['+', '-', '/', '*', '%', '**'].map((opType) => {\n          return (\n            <Button\n              key={opType}\n              type=\"button\"\n              onClick={() => setOp(opType)}\n              active={op === opType}\n              label={opType}\n            />\n          );\n        })}\n      </Box>\n\n      <CalcPropExample num1={num1} num2={num2} op={op} clear={clear} />\n    </Box>\n  );\n}\n\nexport default CalcStateExample;\n","import { Box, Button, Heading, Text } from 'grommet';\nimport { Refresh } from 'grommet-icons';\nimport React, { Component } from 'react';\n\nfunction parse(str) {\n  // eslint-disable-next-line no-new-func\n  return Function(`'use strict'; return (${str})`)();\n}\n\nclass ClassCalcPropExample extends Component {\n  render() {\n    const { num1, num2, op, clear } = this.props;\n    let result;\n    try {\n      result = parse(`${num1}${op}${num2}`);\n    } catch (error) {\n      alert('There was an error!');\n    }\n\n    return (\n      <Box pad=\"medium\">\n        <Text>The result is</Text>\n        <Heading level=\"1\" margin=\"none\" color=\"controls\">\n          {result}\n        </Heading>\n        <Button\n          type=\"button\"\n          color=\"defult\"\n          icon={<Refresh />}\n          onClick={clear}\n          label=\"Clear?\"\n        />\n      </Box>\n    );\n  }\n}\n\nexport default ClassCalcPropExample;\n","import React, { Component } from 'react';\nimport { Box, Button, Heading, TextInput } from 'grommet';\nimport ClassCalcPropExample from './ClassCalcPropExample';\n\nclass ClassCalcStateExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      num1: 0,\n      num2: 0,\n      op: '+',\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  setOp = (op) => {\n    this.setState({\n      op,\n    });\n  };\n\n  clear = () => {\n    this.setState({\n      num1: 0,\n      num2: 0,\n      op: '+',\n    });\n  };\n\n  render() {\n    const { num1, num2, op } = this.state;\n\n    return (\n      <Box pad=\"small\">\n        <Heading level=\"3\" margin=\"none\" color=\"light-1\">\n          Hey look!, a tiny small calculator! (with classes)\n        </Heading>\n\n        <Box pad=\"xsmall\" direction=\"row\">\n          <TextInput\n            type=\"number\"\n            name=\"num1\"\n            placeholder=\"first numer\"\n            value={num1}\n            onChange={this.handleChange}\n          />\n          <TextInput\n            type=\"number\"\n            name=\"num2\"\n            placeholder=\"second numer\"\n            value={num2}\n            onChange={this.handleChange}\n          />\n          {['+', '-', '/', '*', '%', '**'].map((opType) => {\n            return (\n              <Button\n                key={opType}\n                type=\"button\"\n                onClick={() => this.setOp(opType)}\n                active={op === opType}\n                label={opType}\n              />\n            );\n          })}\n        </Box>\n\n        <ClassCalcPropExample\n          num1={num1}\n          num2={num2}\n          op={op}\n          clear={this.clear}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default ClassCalcStateExample;\n","import { Box, Button, List } from 'grommet';\nimport { FormClose } from 'grommet-icons';\nimport React from 'react';\n\nfunction PropExample(props) {\n  const { animal, onRemove } = props;\n  return (\n    <Box\n      align=\"stretch\"\n      border={{ color: 'secondary', size: 'large' }}\n      pad=\"small\"\n      round=\"medium\"\n      elevation=\"medium\"\n      margin=\"xxsmall\"\n    >\n      <Button\n        type=\"button\"\n        alignSelf=\"end\"\n        margin=\"none\"\n        hoverIndicator\n        icon={<FormClose />}\n        onClick={() => onRemove(animal.id)}\n      />\n\n      <List\n        primaryKey=\"key\"\n        secondaryKey=\"value\"\n        data={[\n          { key: 'ID', value: animal.id },\n          { key: 'Name', value: animal.name },\n          { key: 'Group', value: animal.group },\n        ]}\n        margin=\"none\"\n        pad=\"xxsmall\"\n      />\n    </Box>\n  );\n}\n\nexport default PropExample;\n","import React, { useState } from 'react';\nimport PropExample from './PropExample';\nimport { Box, Button, Form, FormField, Grid, Heading, Select } from 'grommet';\n\nfunction StateExample() {\n  const [animals, setAnimals] = useState([\n    { id: 70440, name: 'Cow', group: 'Mammal' },\n    { id: 8184, name: 'Turtle', group: 'Reptile' },\n    { id: 31452, name: 'Snake', group: 'Reptile' },\n    { id: 95305, name: 'Shark', group: 'Fish' },\n    { id: 84541, name: 'Eaggle', group: 'Bird' },\n    { id: 73906, name: 'Bear', group: 'Mammal' },\n  ]);\n\n  const onSubmit = (values) => {\n    setAnimals((oldAnimals) => [\n      ...oldAnimals,\n      { id: Math.floor(Math.random() * 100000), ...values },\n    ]);\n  };\n\n  const onRemove = (id) => {\n    setAnimals((oldAnimals) =>\n      oldAnimals.filter((animal) => {\n        return animal.id !== id;\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Heading margin=\"none\" color=\"light-1\" level=\"3\">\n        Hey look!, here's a collection of animals\n      </Heading>\n\n      <Box pad=\"xsmall\" direction=\"row-responsive\" gap=\"medium\" wrap>\n        {animals.map((animal) => {\n          return (\n            <PropExample\n              key={animal.id.toString()}\n              animal={animal}\n              onRemove={onRemove}\n            />\n          );\n        })}\n      </Box>\n\n      <Heading color=\"light-1\" level=\"4\">\n        Wanna add another animal?\n      </Heading>\n\n      <Grid>\n        <Box pad=\"none\">\n          <Form onSubmit={({ value }) => onSubmit(value)}>\n            <Box direction=\"row\" gap=\"medium\">\n              <FormField\n                name=\"name\"\n                label=\"Name\"\n                placeholder=\"name...\"\n                required\n              />\n\n              <FormField\n                label=\"Group\"\n                name=\"group\"\n                placeholder=\"Select a group\"\n                component={Select}\n                options={[\n                  'Mammal',\n                  'Reptile',\n                  'Fish',\n                  'Bird',\n                  'Insect',\n                  'Amphibian',\n                  'Dinosaur',\n                  'Sea Reptile',\n                  'Politician',\n                ]}\n                required\n              />\n\n              <Box direction=\"row\" gap=\"medium\">\n                <Button type=\"submit\" primary label=\"Add\" />\n                <Button type=\"reset\" label=\"Reset\" />\n              </Box>\n            </Box>\n          </Form>\n        </Box>\n      </Grid>\n    </div>\n  );\n}\n\nexport default StateExample;\n","import { Box, Grid } from 'grommet';\nimport React from 'react';\nimport CalcStateExample from './CalcStateExample';\nimport ClassCalcStateExample from './ClassCalcStateExample';\nimport StateExample from './StateExample';\n\nfunction StateVsProps() {\n  return (\n    <Grid>\n      <Box align=\"stretch\" pad={{ horizontal: 'large' }}>\n        <Grid\n          areas={[\n            { name: 'main1', start: [0, 0], end: [1, 0] },\n            { name: 'main2', start: [0, 1], end: [0, 1] },\n            { name: 'main3', start: [1, 1], end: [1, 1] },\n          ]}\n          columns={['large', 'large']}\n          rows={['flex', 'auto']}\n          gap=\"small\"\n          fill\n        >\n          <Box gridArea=\"main1\" background=\"primary\" pad=\"medium\">\n            <StateExample />\n          </Box>\n\n          <Box gridArea=\"main2\" background=\"secondary\" pad=\"medium\">\n            <CalcStateExample />\n          </Box>\n\n          <Box gridArea=\"main3\" background=\"secondary\" pad=\"medium\">\n            <ClassCalcStateExample />\n          </Box>\n        </Grid>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default StateVsProps;\n","export const PRODUCTS = [\n  {\n    category: 'Sporting Goods',\n    price: '$49.99',\n    stocked: true,\n    name: 'Football',\n  },\n  {\n    category: 'Sporting Goods',\n    price: '$9.99',\n    stocked: true,\n    name: 'Baseball',\n  },\n  {\n    category: 'Sporting Goods',\n    price: '$29.99',\n    stocked: false,\n    name: 'Basketball',\n  },\n  {\n    category: 'Electronics',\n    price: '$99.99',\n    stocked: true,\n    name: 'iPod Touch',\n  },\n  {\n    category: 'Electronics',\n    price: '$399.99',\n    stocked: false,\n    name: 'iPhone 5',\n  },\n  {\n    category: 'Electronics',\n    price: '$199.99',\n    stocked: true,\n    name: 'Nexus 7',\n  },\n  {\n    category: 'Music',\n    price: '$19.19',\n    stocked: true,\n    name: 'Californication',\n  },\n  {\n    category: 'Music',\n    price: '$17.11',\n    stocked: false,\n    name: 'Make Yourself',\n  },\n  {\n    category: 'Music',\n    price: '$21.56',\n    stocked: false,\n    name: 'Science',\n  },\n  {\n    category: 'Music',\n    price: '$11.25',\n    stocked: true,\n    name: 'Camino Palmero',\n  },\n  {\n    category: 'Music',\n    price: '$16.39',\n    stocked: true,\n    name: 'Fungus Amongus',\n  },\n  {\n    category: 'Movies',\n    price: '$9.54',\n    stocked: false,\n    name: 'Avengers - Endgame',\n  },\n  {\n    category: 'Movies',\n    price: '$19.19',\n    stocked: true,\n    name: 'Star Wars',\n  },\n  {\n    category: 'Movies',\n    price: '$26.15',\n    stocked: true,\n    name: 'Lord of the Rings',\n  },\n  {\n    category: 'Movies',\n    price: '$13.18',\n    stocked: true,\n    name: 'Sherlock Holmes',\n  },\n];\n","import React, { useState, createContext } from 'react';\nimport { PRODUCTS } from './data';\n\nexport const ProductContext = createContext();\n\nfunction ProductProvider(props) {\n  const [products, setProducts] = useState(PRODUCTS);\n\n  return (\n    <ProductContext.Provider value={[products, setProducts]}>\n      {props.children}\n    </ProductContext.Provider>\n  );\n}\n\nexport default ProductProvider;\n","import { CheckBox, DataTable, Form, FormField, Text, TextInput } from 'grommet';\nimport React, { useContext, useState } from 'react';\nimport { ProductContext } from './Context';\nimport { PRODUCTS } from './data';\n\nexport function ProductTable() {\n  const [products] = useContext(ProductContext);\n\n  return (\n    <DataTable\n      background={['light-2', 'default']}\n      columns={[\n        {\n          property: 'category',\n          header: 'Category',\n          search: true,\n        },\n        {\n          property: 'name',\n          header: 'Name',\n          primary: true,\n          search: true,\n          render: (product) =>\n            product.stocked ? (\n              product.name\n            ) : (\n              <Text color=\"secondary\">{product.name}</Text>\n            ),\n        },\n        {\n          property: 'price',\n          header: 'Price',\n          search: true,\n        },\n      ]}\n      data={products}\n      resizeable\n    />\n  );\n}\n\nexport function SearchBar() {\n  const [, setProducts] = useContext(ProductContext);\n  const [search, setSearch] = useState('');\n  const [checked, setChecked] = useState(false);\n\n  const handleSearch = (query) => {\n    setSearch(query);\n    filter({ search: query, checked });\n  };\n\n  const handleChange = (chk = false) => {\n    setChecked(chk);\n    filter({ search, checked: chk });\n  };\n\n  const filter = (criteria) => {\n    const results = PRODUCTS.filter((product) => {\n      const rs = product.name.toLowerCase().includes(criteria.search);\n      if (criteria.checked) {\n        return rs && product.stocked;\n      }\n      return rs;\n    });\n    setProducts(results);\n  };\n\n  return (\n    <Form>\n      <FormField>\n        <TextInput\n          placeholder=\"Search...\"\n          value={search}\n          onChange={(e) => handleSearch(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <CheckBox\n          label=\"Only show products in stock\"\n          onChange={(e) => handleChange(e.target.checked)}\n          toggle\n        />\n      </FormField>\n    </Form>\n  );\n}\n","import { Box } from 'grommet';\nimport React from 'react';\nimport { ProductTable, SearchBar } from './Components';\nimport ProductProvider from './Context';\n\nfunction ThinkingInReact() {\n  return (\n    <Box\n      background=\"light-1\"\n      border={{ color: 'brand', size: 'large' }}\n      pad=\"medium\"\n    >\n      <ProductProvider>\n        <SearchBar />\n        <ProductTable />\n      </ProductProvider>\n    </Box>\n  );\n}\n\nexport default ThinkingInReact;\n","import {\n  Box,\n  Button,\n  Grid,\n  Heading,\n  List,\n  Select,\n  Text,\n  TextInput,\n} from 'grommet';\nimport React, { useState } from 'react';\n\n/**\n * Moving JSX Example to its own menu item\n */\nfunction JSXExample() {\n  const [backgroundColor, setBackgroundColor] = useState('yellow');\n  const [colors, setColors] = useState([\n    'red',\n    'blue',\n    'green',\n    'lightgreen',\n    'cyan',\n    'purple',\n    'black',\n    'gray',\n    'magenta',\n    'pink',\n    'lightblue',\n    'orange',\n  ]);\n\n  const continents = ['America', 'Europe', 'Asia', 'Oceania', 'Africa'];\n\n  let content = null;\n  switch (backgroundColor) {\n    case 'black':\n      content = <Black />;\n      break;\n    case 'magenta':\n      content = <Magenta />;\n      break;\n    case 'blue':\n      content = <Blue />;\n      break;\n    case 'lightgreen':\n      content = <Lightgreen />;\n      break;\n    default:\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      setColors((oldColors) => [...oldColors, event.target.value]);\n    }\n  };\n\n  return (\n    <Grid>\n      <Box align=\"stretch\" pad={{ horizontal: 'large' }}>\n        <Heading margin=\"none\" color=\"brand\">\n          Hello, this is not an HTML5 file\n          {`... `}\n          It's JSX\n        </Heading>\n\n        <br />\n\n        <Heading margin=\"none\" color=\"controls\" level=\"3\">\n          Look, here is a list of continents\n        </Heading>\n        <List data={continents} />\n\n        <br />\n        <hr />\n\n        <div>\n          <Heading margin=\"none\" color=\"controls\" level=\"3\">\n            Look, you can change the background color of the container\n          </Heading>\n          <div>\n            {colors.map((color) => {\n              return (\n                <Button\n                  key={color}\n                  type=\"button\"\n                  size=\"small\"\n                  margin=\"xsmall\"\n                  onClick={(event) => setBackgroundColor(color)}\n                  label={`${color.charAt(0).toUpperCase()}${color.slice(1)}`}\n                  color={color}\n                />\n              );\n            })}\n          </div>\n\n          <Box pad=\"medium\" width=\"medium\" background={backgroundColor}>\n            <Text\n              size=\"large\"\n              color={backgroundColor === 'black' ? 'primary' : 'secondary'}\n            >\n              {`${backgroundColor\n                .charAt(0)\n                .toUpperCase()}${backgroundColor.slice(1)}`}\n            </Text>\n          </Box>\n        </div>\n\n        <br />\n        <hr />\n\n        <div>\n          <Heading margin=\"none\" color=\"controls\" level=\"3\">\n            Look, you can render different elements based on the color you\n            choose\n          </Heading>\n          <Select\n            name=\"choose-color\"\n            id=\"choose-color\"\n            value={backgroundColor}\n            onChange={({ option }) => setBackgroundColor(option)}\n            options={colors}\n            placeholder=\" --- Select a color --- \"\n          />\n          You selected: <strong>{backgroundColor}</strong>\n          {content}\n        </div>\n\n        <Heading color=\"controls\" level=\"4\">\n          Add a new color\n        </Heading>\n        <TextInput\n          placeholder=\"You can add a color here...\"\n          onKeyDown={handleKeyDown}\n        />\n      </Box>\n    </Grid>\n  );\n}\n\nfunction Black() {\n  return <div style={{ height: 60, width: 60, backgroundColor: 'black' }} />;\n}\n\nfunction Magenta() {\n  return (\n    <div\n      style={{\n        height: 60,\n        width: 260,\n        backgroundColor: 'magenta',\n        WebkitBorderRadius: 18,\n      }}\n    />\n  );\n}\n\nfunction Blue() {\n  return (\n    <div\n      style={{\n        height: 60,\n        width: 60,\n        backgroundColor: 'blue',\n        transform: 'rotate(45deg)',\n      }}\n    />\n  );\n}\n\nfunction Lightgreen() {\n  return (\n    <div\n      style={{\n        height: 60,\n        width: 60,\n        backgroundColor: 'lightgreen',\n        borderRadius: '5px 20px 5px',\n      }}\n    />\n  );\n}\n\nexport default JSXExample;\n","export const TODOS = [\n  {\n    id: 38345,\n    description: 'Learn ReactJs',\n    dateTo: '2020-10-28',\n    completed: true,\n  },\n  {\n    id: 64683,\n    description: 'Learn Python',\n    dateTo: '2020-11-29',\n    completed: false,\n  },\n  {\n    id: 78434,\n    description: 'Learn to Cook',\n    dateTo: '2020-12-01',\n    completed: false,\n  },\n  {\n    id: 50668,\n    description: 'Learn Assembler and not die trying',\n    dateTo: '2021-01-01',\n    completed: false,\n  },\n];\n","import React, { useState, createContext } from 'react';\nimport { TODOS } from './data';\n\nexport const TodosContext = createContext();\n\nfunction TodosProvider(props) {\n  const [todos, setTodos] = useState(TODOS);\n\n  return (\n    <TodosContext.Provider value={[todos, setTodos]}>\n      {props.children}\n    </TodosContext.Provider>\n  );\n}\n\nexport default TodosProvider;\n","import React from 'react';\nimport { DateTime } from 'luxon';\nimport { Box, Button, CheckBox, Heading, Text } from 'grommet';\nimport { FormClose } from 'grommet-icons';\n\nfunction Item({ todo, update, remove }) {\n  return (\n    <Box\n      align=\"stretch\"\n      border={{ color: 'dark-1', size: 'xxsmall' }}\n      pad={{ vertical: 'small', horizontal: 'medium' }}\n      round=\"medium\"\n      elevation=\"medium\"\n      margin=\"xsmall\"\n      direction=\"row\"\n      gap=\"medium\"\n    >\n      <CheckBox\n        checked={todo.completed}\n        onChange={() => update(todo.id, { completed: !todo.completed })}\n      />\n\n      <Box gap=\"xxsmall\">\n        <Text\n          style={\n            todo.completed\n              ? {\n                  textDecorationLine: 'line-through',\n                  fontStyle: 'italic',\n                  fontWeight: 'bolder',\n                }\n              : {}\n          }\n        >\n          {todo.description}\n        </Text>\n        <Text color=\"dark-3\" size=\"small\" style={{ fontStyle: 'italic' }}>\n          {DateTime.fromISO(todo.dateTo).toLocaleString(DateTime.DATE_HUGE)}\n        </Text>\n      </Box>\n\n      <Button\n        type=\"button\"\n        alignSelf=\"end\"\n        margin=\"none\"\n        hoverIndicator\n        icon={<FormClose />}\n        onClick={() => remove(todo.id)}\n      />\n    </Box>\n  );\n}\n\nexport function Category({ category }) {\n  return (\n    <Heading color=\"dark-1\" level=\"4\" margin=\"xxsmall\">\n      <span>{category}</span>\n    </Heading>\n  );\n}\n\nexport default Item;\n","import React, { useContext } from 'react';\nimport { DateTime } from 'luxon';\nimport { TodosContext } from './Context';\nimport Item, { Category } from './Item';\nimport { Box, Grid } from 'grommet';\n\nconst categories = [\n  'Past',\n  'Today',\n  'Tomorrow',\n  'This Week',\n  'Next Week',\n  'Upcoming',\n  'Next Month',\n  'Someday',\n];\n\nfunction getCategory({ months, weeks, days, hours }) {\n  if (months >= 2) {\n    return 'Someday';\n  } else if (months >= 1) {\n    return 'Next Month';\n  } else if (weeks > 2) {\n    return 'Upcoming';\n  } else if (weeks > 1) {\n    return 'Next Week';\n  } else if (days >= 2) {\n    return 'This Week';\n  } else if (days >= 1) {\n    return 'Tomorrow';\n  } else if (days >= 0) {\n    return 'Today';\n  } else {\n    return 'Past';\n  }\n}\n\nfunction List() {\n  const [todos, setTodos] = useContext(TodosContext);\n\n  const list = todos.map((todo) => {\n    const diff = DateTime.fromISO(todo.dateTo)\n      .diff(DateTime.local(), ['months', 'weeks', 'days', 'hours'])\n      .toObject();\n    const category = getCategory(diff);\n\n    return {\n      ...todo,\n      category,\n    };\n  });\n\n  const remove = (id) => {\n    const updatedData = todos.filter((todo) => {\n      return todo.id !== id;\n    });\n    setTodos(updatedData);\n  };\n\n  const update = (id, values) => {\n    const updatedData = todos.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          ...values,\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedData);\n  };\n\n  /**\n   * We render first the categories, then we loop over\n   * the todos to get the ones included in current category\n   */\n  return (\n    <Grid>\n      <Box pad=\"none\">\n        {categories.map((category) => {\n          /**\n           * Getting items in category\n           */\n          const items = list.filter((item) => {\n            return item.category === category;\n          });\n\n          /**\n           * No items found\n           */\n          if (items.length === 0) {\n            return null;\n          }\n\n          /**\n           * Render category, then we loop over items and render them.\n           */\n          return (\n            <Box gap=\"xsmall\" margin=\"small\" key={category}>\n              <Category category={category} />\n              {items.map((item) => {\n                return (\n                  <Item\n                    key={item.id}\n                    todo={item}\n                    update={update}\n                    remove={remove}\n                  />\n                );\n              })}\n            </Box>\n          );\n        })}\n      </Box>\n    </Grid>\n  );\n}\n\nexport default List;\n","import React, { useContext } from 'react';\nimport { TodosContext } from './Context';\nimport { Box, Button, DateInput, Form, FormField, Grid } from 'grommet';\n\nfunction NavBar() {\n  const [, setTodos] = useContext(TodosContext);\n\n  const onSubmit = (values) => {\n    setTodos((todos) => [\n      ...todos,\n      {\n        id: Math.floor(Math.random() * 100000),\n        completed: false,\n        ...values,\n      },\n    ]);\n  };\n\n  return (\n    <Grid>\n      <Box pad=\"none\">\n        <Form onSubmit={({ value }) => onSubmit(value)}>\n          <Box direction=\"row\" gap=\"medium\">\n            <FormField\n              name=\"description\"\n              label=\"Description\"\n              placeholder=\"I want to...\"\n              required\n            />\n\n            <FormField label=\"Date To\">\n              <DateInput name=\"dateTo\" format=\"mm/dd/yyyy\" />\n            </FormField>\n\n            <Box direction=\"row\" gap=\"medium\">\n              <Button type=\"submit\" primary label=\"Add\" />\n            </Box>\n          </Box>\n        </Form>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default NavBar;\n","import { Box } from 'grommet';\nimport React from 'react';\nimport TodosProvider from './Context';\nimport List from './List';\nimport NavBar from './NavBar';\n\nfunction TodoExample() {\n  return (\n    <Box\n      background=\"light-1\"\n      border={{ color: 'brand', size: 'large' }}\n      pad=\"medium\"\n    >\n      <TodosProvider>\n        <NavBar />\n        <List />\n      </TodosProvider>\n    </Box>\n  );\n}\n\nexport default TodoExample;\n","import React, { useState, createContext } from 'react';\n\nexport const BlogContext = createContext();\n\nfunction BlogProvider(props) {\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  return (\n    <BlogContext.Provider\n      value={{\n        users: [users, setUsers],\n        selectedUser: [selectedUser, setSelectedUser],\n      }}\n    >\n      {props.children}\n    </BlogContext.Provider>\n  );\n}\n\nexport default BlogProvider;\n","import { Box, Image, Text } from 'grommet';\nimport React, { useState } from 'react';\n\nfunction Album({ album, handleOnClick }) {\n  const [open, setOpen] = useState(false);\n\n  const onClick = () => {\n    handleOnClick(album.id);\n    setOpen((isOpen) => !isOpen);\n  };\n\n  return (\n    <Box background=\"light-3\" pad=\"xsmall\">\n      <Box\n        align=\"stretch\"\n        border={{ color: 'dark-1', size: 'xxsmall' }}\n        pad={{ vertical: 'small', horizontal: 'medium' }}\n        round=\"medium\"\n        elevation=\"medium\"\n        margin=\"xsmall\"\n        gap=\"xsmall\"\n        onClick={onClick}\n      >\n        <Text weight=\"bold\" size=\"xsmall\">\n          {album.title}\n        </Text>\n      </Box>\n\n      {open && (\n        <Box\n          background=\"light-1\"\n          pad=\"xsmall\"\n          margin={{ left: 'large' }}\n          round=\"small\"\n        >\n          {album.photos &&\n            album.photos.map &&\n            album.photos.map((photo) => {\n              return (\n                <Box\n                  align=\"stretch\"\n                  border={{ color: 'dark-1', size: 'xxsmall' }}\n                  pad={{ vertical: 'small', horizontal: 'medium' }}\n                  round=\"medium\"\n                  elevation=\"medium\"\n                  margin=\"xsmall\"\n                  gap=\"xsmall\"\n                  direction=\"row\"\n                  key={photo.id}\n                >\n                  <Text weight=\"bold\" size=\"xsmall\">\n                    {photo.title}\n                  </Text>\n                  <Image\n                    fit=\"contain\"\n                    src={photo.thumbnailUrl}\n                    alt={photo.title}\n                    height=\"25\"\n                  />\n                </Box>\n              );\n            })}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default Album;\n","import Axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { BlogContext } from './Context';\nimport Album from './Album';\nimport { Box, Heading, Text } from 'grommet';\n\nfunction Albums() {\n  const {\n    selectedUser: [selectedUser],\n  } = useContext(BlogContext);\n  const [albums, setAlbums] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\n      `https://jsonplaceholder.typicode.com/users/${selectedUser.id}/albums`\n    )\n      .then((result) => {\n        setAlbums(result.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [selectedUser]);\n\n  const fetchPhotos = (id) => {\n    Axios.get(`https://jsonplaceholder.typicode.com/albums/${id}/photos`)\n      .then((result) => {\n        setAlbums((currentAlbums) =>\n          currentAlbums.map((album) => {\n            if (album.id === id) {\n              return {\n                ...album,\n                photos: result.data,\n              };\n            }\n            return album;\n          })\n        );\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <Box gridArea=\"main2\" background=\"light-1\" pad=\"xsmall\">\n      <Heading level=\"3\" margin=\"none\" color=\"dark-1\">\n        Hey look!, Here's a list of albums from{' '}\n        <Text color=\"brand\" weight=\"bold\" size=\"8\">\n          {selectedUser.name}\n        </Text>\n      </Heading>\n\n      <Box pad=\"xsmall\">\n        {albums.map((album) => {\n          return (\n            <Album key={album.id} album={album} handleOnClick={fetchPhotos} />\n          );\n        })}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Albums;\n","import Axios from 'axios';\nimport { Box, Text, TextInput } from 'grommet';\nimport React, { useState } from 'react';\n\nfunction Comment({ comment }) {\n  return (\n    <Box\n      align=\"stretch\"\n      border={{ color: 'dark-1', size: 'xxsmall' }}\n      pad={{ vertical: 'small', horizontal: 'medium' }}\n      round=\"medium\"\n      elevation=\"medium\"\n      margin=\"xsmall\"\n      gap=\"xsmall\"\n    >\n      <Text weight=\"bold\" size=\"xsmall\">\n        {comment.name}\n      </Text>\n      <Text size=\"xsmall\" color=\"brand\">\n        {comment.email}\n      </Text>\n      <Text size=\"xsmall\">{comment.body}</Text>\n    </Box>\n  );\n}\n\nfunction Post({ post, handleOnClick, addComment }) {\n  const [open, setOpen] = useState(false);\n  const [commentText, setCommentText] = useState('');\n\n  const insertCommentIntoPost = () => {\n    Axios.post(\n      `https://jsonplaceholder.typicode.com/posts/${post.id}/comments`,\n      {\n        postId: post.id,\n        name: 'This is just a test',\n        email: 'test@gmail.com',\n        body: commentText,\n      }\n    )\n      .then((result) => {\n        addComment({\n          ...result.data,\n          postId: parseInt(result.data.postId, 10),\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const onClick = () => {\n    handleOnClick(post.id);\n    setOpen((isOpen) => !isOpen);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      insertCommentIntoPost();\n    }\n  };\n\n  return (\n    <Box background=\"light-3\" pad=\"xsmall\">\n      <Box\n        align=\"stretch\"\n        border={{ color: 'dark-1', size: 'xxsmall' }}\n        pad={{ vertical: 'small', horizontal: 'medium' }}\n        round=\"medium\"\n        elevation=\"medium\"\n        margin=\"xsmall\"\n        gap=\"xsmall\"\n        onClick={onClick}\n      >\n        <Text weight=\"bold\" size=\"xsmall\">\n          {post.title}\n        </Text>\n        <Text size=\"xsmall\" truncate={!open}>\n          {post.body}\n        </Text>\n      </Box>\n\n      {open && (\n        <Box\n          background=\"light-1\"\n          pad=\"xsmall\"\n          margin={{ left: 'large' }}\n          round=\"small\"\n        >\n          {post.comments &&\n            post.comments.map &&\n            post.comments.map((comment) => {\n              return <Comment key={comment.id} comment={comment} />;\n            })}\n\n          <TextInput\n            placeholder=\"Add a comment...\"\n            onChange={(e) => setCommentText(e.target.value)}\n            onKeyDown={handleKeyDown}\n          />\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default Post;\n","import Axios from 'axios';\nimport { Box, Heading, Text } from 'grommet';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { BlogContext } from './Context';\nimport Post from './Post';\n\nfunction Posts() {\n  const {\n    selectedUser: [selectedUser],\n  } = useContext(BlogContext);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\n      `https://jsonplaceholder.typicode.com/users/${selectedUser.id}/posts`\n    )\n      .then((result) => {\n        setPosts(result.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [selectedUser]);\n\n  const fetchComments = (id) => {\n    Axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)\n      .then((result) => {\n        setPosts((currentPosts) =>\n          currentPosts.map((post) => {\n            if (post.id === id) {\n              return {\n                ...post,\n                comments: result.data,\n              };\n            }\n            return post;\n          })\n        );\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const addComment = (comment) => {\n    setPosts((currentPosts) =>\n      currentPosts.map((post) => {\n        if (post.id === comment.postId) {\n          return {\n            ...post,\n            comments: [\n              ...post.comments,\n              {\n                ...comment,\n                id: Math.floor(Math.random() * 100000),\n              },\n            ],\n          };\n        }\n        return post;\n      })\n    );\n  };\n\n  return (\n    <Box gridArea=\"main1\" background=\"light-1\" pad=\"xsmall\">\n      <Heading level=\"3\" margin=\"none\" color=\"dark-1\">\n        Hey look!, Here's a list of posts from{' '}\n        <Text color=\"brand\" weight=\"bold\" size=\"8\">\n          {selectedUser.name}\n        </Text>\n      </Heading>\n\n      <Box pad=\"xsmall\">\n        {posts.map((post) => {\n          return (\n            <Post\n              key={post.id}\n              post={post}\n              handleOnClick={fetchComments}\n              addComment={addComment}\n            />\n          );\n        })}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Posts;\n","import Axios from 'axios';\nimport {\n  Box,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Grid,\n  Text,\n} from 'grommet';\nimport { User } from 'grommet-icons';\nimport React, { useContext, useEffect } from 'react';\nimport Albums from './Albums';\nimport { BlogContext } from './Context';\nimport Posts from './Posts';\n\nfunction Users() {\n  const {\n    users: [users, setUsers],\n    selectedUser: [selectedUser, setSelectedUser],\n  } = useContext(BlogContext);\n\n  useEffect(() => {\n    Axios.get('https://jsonplaceholder.typicode.com/users')\n      .then((result) => {\n        setUsers(result.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [setUsers]);\n\n  return (\n    <Box pad=\"xsmall\" direction=\"row-responsive\" gap=\"small\" wrap>\n      {selectedUser ? (\n        <Grid>\n          <Box align=\"stretch\" pad={{ horizontal: 'large' }}>\n            <Grid\n              areas={[\n                { name: 'main1', start: [0, 0], end: [0, 0] },\n                { name: 'main2', start: [1, 0], end: [1, 0] },\n              ]}\n              columns={['large', 'large']}\n              rows={['flex', 'auto']}\n              gap=\"small\"\n              fill\n            >\n              <Posts />\n              <Albums />\n            </Grid>\n          </Box>\n        </Grid>\n      ) : (\n        users.map((user) => {\n          return (\n            <Box\n              align=\"stretch\"\n              border={{ color: 'dark-1', size: 'xxsmall' }}\n              pad={{ vertical: 'small', horizontal: 'medium' }}\n              round=\"medium\"\n              elevation=\"medium\"\n              margin=\"xsmall\"\n              direction=\"row\"\n              gap=\"small\"\n              key={user.id}\n              onClick={() => setSelectedUser(user)}\n            >\n              <Card height=\"small\" background=\"light-3\">\n                <CardHeader pad=\"small\">\n                  <User color=\"plain\" />\n                  <Text>{user.name}</Text>\n                </CardHeader>\n                <CardBody pad=\"small\">\n                  <Text color=\"controls\" weight=\"bold\">\n                    Username\n                  </Text>\n                  <Text> {user.username}</Text>\n                </CardBody>\n                <CardFooter pad={{ horizontal: 'small' }} background=\"dark-2\">\n                  <Text color=\"brand\" weight=\"bold\">\n                    Email\n                  </Text>\n                  <Text> {user.email}</Text>\n                </CardFooter>\n              </Card>\n            </Box>\n          );\n        })\n      )}\n    </Box>\n  );\n}\n\nexport default Users;\n","import { Anchor, Box, Heading } from 'grommet';\nimport React from 'react';\nimport BlogProvider from './Context';\nimport Users from './Users';\n\nfunction Blog() {\n  return (\n    <Box pad=\"medium\" gap=\"medium\">\n      <Heading level=\"4\" margin=\"none\" color=\"brand\">\n        Hey look!, here's a list of registered users in blog\n      </Heading>\n\n      <Heading level=\"5\" margin=\"none\" color=\"brand\">\n        Using Axios for asynchronous HTTP requests and then/catch blocks\n        promises handler\n      </Heading>\n\n      <Heading level=\"6\" margin=\"none\" color=\"brand\">\n        <Anchor\n          href=\"https://jsonplaceholder.typicode.com/\"\n          label=\"https://jsonplaceholder.typicode.com/\"\n        />\n      </Heading>\n\n      <BlogProvider>\n        <Users />\n      </BlogProvider>\n    </Box>\n  );\n}\n\nexport default Blog;\n","import React from 'react';\nimport { Box } from 'grommet';\n\nconst spinning = (\n  <svg\n    version=\"1.1\"\n    viewBox=\"0 0 32 32\"\n    width=\"28px\"\n    height=\"28px\"\n    fill=\"#7D4CDB\"\n  >\n    <path\n      opacity=\".25\"\n      d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\"\n    />\n    <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        from=\"0 16 16\"\n        to=\"360 16 16\"\n        dur=\"0.8s\"\n        repeatCount=\"indefinite\"\n      />\n    </path>\n  </svg>\n);\n\nexport const Spinner = () => (\n  <Box align=\"center\" justify=\"center\">\n    {spinning}\n  </Box>\n);\n\nexport default Spinner;\n","import { Box, Image, List } from 'grommet';\nimport React from 'react';\n\nfunction Country({ country }) {\n  return (\n    <Box\n      align=\"stretch\"\n      border={{ color: 'light-3', size: 'xsmall' }}\n      pad=\"small\"\n      round=\"medium\"\n      elevation=\"medium\"\n      margin=\"xxsmall\"\n      gap=\"small\"\n    >\n      <Box height=\"xxsmall\">\n        <Image\n          fit=\"contain\"\n          src={country.flag}\n          alt={`${country.demonym} flag`}\n          height=\"30\"\n        />\n      </Box>\n      <List\n        primaryKey=\"key\"\n        secondaryKey=\"value\"\n        data={[\n          { key: 'Name', value: country.name },\n          { key: 'Capital', value: country.capital },\n        ]}\n        margin=\"none\"\n        pad=\"xxsmall\"\n      />\n    </Box>\n  );\n}\n\nexport default Country;\n","import { Box } from 'grommet';\nimport React from 'react';\nimport Country from './Country';\n\nfunction List({ countries }) {\n  return (\n    <Box pad=\"xsmall\" direction=\"row-responsive\" gap=\"small\" wrap>\n      {countries.map((country) => {\n        return <Country country={country} key={country.alpha3Code} />;\n      })}\n    </Box>\n  );\n}\n\nexport default List;\n","import Axios from 'axios';\nimport {\n  Anchor,\n  Box,\n  Form,\n  Grid,\n  Heading,\n  Select,\n  Text,\n  TextInput,\n} from 'grommet';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Spinner from '../../../Components/Grommet/Spinner';\nimport List from './List';\n\nfunction Countries() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [countries, setCountries] = useState([]);\n  const [searchFor, setSearchFor] = useState('name');\n  const [query, setQuery] = useState('el salvador');\n\n  const fetchCountries = useCallback(async () => {\n    if (!query) {\n      return;\n    }\n\n    setIsError(false);\n    setIsLoading(true);\n\n    try {\n      const response = await Axios.get(\n        `https://restcountries.eu/rest/v2/${searchFor}/${query}`\n      );\n      setCountries(response.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      setIsError(true);\n    }\n  }, [query, searchFor]);\n\n  useEffect(() => {\n    fetchCountries();\n  }, [fetchCountries]);\n\n  useEffect(() => {\n    console.log('Hey i mounted because you selected this tab');\n    return () => {\n      console.log('You selected the other tab. Goodbye!');\n    };\n  }, []);\n\n  const handleSearchForChange = (val) => {\n    setSearchFor(val);\n    setQuery(val === 'name' ? 'el salvador' : 'es');\n  };\n\n  return (\n    <Box pad=\"medium\" gap=\"medium\">\n      <Heading level=\"4\" margin=\"none\" color=\"controls\">\n        Hey look!, here is a list of countries matching your search criteria\n      </Heading>\n\n      <Heading level=\"5\" margin=\"none\" color=\"controls\">\n        Using Axios for asynchronous HTTP requests and async/await promises\n        handler\n      </Heading>\n\n      <Heading level=\"6\" margin=\"none\" color=\"controls\">\n        <Anchor\n          href=\"https://restcountries.eu/rest/v2/all\"\n          label=\"https://restcountries.eu/rest/v2/all\"\n        />\n      </Heading>\n\n      {isError && <Text color=\"status-error\">Something went wrong!...</Text>}\n\n      <Grid>\n        <Box pad=\"none\">\n          <Form>\n            <Box direction=\"row\" gap=\"medium\">\n              <Select\n                value={searchFor}\n                onChange={({ value }) => handleSearchForChange(value)}\n                options={[\n                  { key: 'name', label: 'Name' },\n                  { key: 'lang', label: 'Language' },\n                ]}\n                labelKey=\"label\"\n                valueKey={{ key: 'key', reduce: true }}\n              />\n\n              {searchFor === 'name' && (\n                <TextInput\n                  placeholder=\"Search...\"\n                  value={query}\n                  onChange={(e) => setQuery(e.target.value)}\n                />\n              )}\n\n              {searchFor === 'lang' && (\n                <Select\n                  value={query}\n                  onChange={({ value }) => setQuery(value)}\n                  options={[\n                    { lang: 'es', label: 'Spanish' },\n                    { lang: 'en', label: 'English' },\n                    { lang: 'fr', label: 'French' },\n                    { lang: 'de', label: 'German' },\n                  ]}\n                  labelKey=\"label\"\n                  valueKey={{ key: 'lang', reduce: true }}\n                />\n              )}\n            </Box>\n          </Form>\n\n          {isLoading ? <Spinner /> : <List countries={countries} />}\n        </Box>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Countries;\n","import Axios from 'axios';\nimport {\n  Box,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Heading,\n  Text,\n} from 'grommet';\nimport { User, UserFemale } from 'grommet-icons';\nimport { DateTime } from 'luxon';\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport Spinner from '../../../Components/Grommet/Spinner';\n\nfunction Users() {\n  const { isLoading, error: isError, data: users } = useQuery(\n    'fetchUsers',\n    async () => {\n      const { data } = await Axios.get(`https://gorest.co.in/public-api/users?page=66`);\n      return data.data;\n    }\n  );\n\n  return (\n    <>\n      {isError && (\n        <Heading margin=\"medium\" color=\"status-critial\">\n          Oops!!! an error has ocurred :(\n        </Heading>\n      )}\n      {isLoading ? (\n        <Box pad=\"large\" margin=\"large\">\n          <Spinner />\n        </Box>\n      ) : (\n        <Box pad=\"xsmall\" direction=\"row-responsive\" gap=\"small\" wrap>\n          {users.map((user) => {\n            return (\n              <Box\n                align=\"stretch\"\n                border={{ color: 'dark-1', size: 'xxsmall' }}\n                pad=\"small\"\n                round=\"medium\"\n                elevation=\"medium\"\n                margin=\"xsmall\"\n                direction=\"row\"\n                gap=\"small\"\n                key={user.id}\n              >\n                <Card height=\"xsmall\" background=\"light-3\">\n                  <CardHeader pad=\"small\">\n                    {user.gender === 'Male' ? (\n                      <User color=\"brand\" size=\"medium\" />\n                    ) : (\n                      <UserFemale color=\"secondary\" size=\"medium\" />\n                    )}\n                    <Text>{user.name}</Text>\n                  </CardHeader>\n                  <CardBody pad={{ horizontal: 'small' }}>\n                    <Text color=\"brand\" weight=\"bold\">\n                      {user.email}\n                    </Text>\n                  </CardBody>\n                  <CardFooter\n                    pad={{ horizontal: 'small' }}\n                    background=\"harmonie-6\"\n                  >\n                    <Text color=\"brand\">Member since</Text>\n                    <Text>\n                      {DateTime.fromISO(user.created_at).toLocaleString(\n                        DateTime.DATETIME_MED\n                      )}\n                    </Text>\n                  </CardFooter>\n                </Card>\n              </Box>\n            );\n          })}\n        </Box>\n      )}\n    </>\n  );\n}\n\nexport default Users;\n","import { Tab, Tabs } from 'grommet';\nimport React from 'react';\nimport Blog from './Blog';\nimport Countries from './Countries';\nimport Users from './Users';\n\nfunction APIInteractions() {\n  return (\n    <Tabs margin=\"medium\">\n      <Tab title=\"REST Countries\" margin=\"medium\">\n        <Countries />\n      </Tab>\n      <Tab title=\"REST Blog\" margin=\"medium\">\n        <Blog />\n      </Tab>\n      <Tab title=\"REST Users (React-Query)\" margin=\"medium\">\n        <Users />\n      </Tab>\n    </Tabs>\n  );\n}\n\nexport default APIInteractions;\n","export function addEmployee(payload) {\n  return {\n    type: 'ADD_EMPLOYEE',\n    payload,\n  };\n}\nexport function updateEmployee(payload) {\n  return {\n    type: 'UPDATE_EMPLOYEE',\n    payload,\n  };\n}\n\nexport function removeEmployee(payload) {\n  return {\n    type: 'REMOVE_EMPLOYEE',\n    payload,\n  };\n}\n\nexport function openSideForm(payload) {\n  return {\n    type: 'OPEN_SIDE_FORM',\n    payload,\n  };\n}\n\nexport function setSelectedEmployeeId(payload) {\n  return {\n    type: 'SET_SELECTED_EMPLOYEE_ID',\n    payload,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, Button, DataTable, Heading } from 'grommet';\nimport { Actions, FormClose, FormEdit, UserAdd } from 'grommet-icons';\nimport {\n  openSideForm,\n  setSelectedEmployeeId,\n  removeEmployee,\n} from '../../redux/actions';\n\nexport const Employees = (props) => {\n  const openSideForm = (id) => {\n    props.setSelectedEmployeeId(id);\n    props.openSideForm(true);\n  };\n\n  return (\n    <Box gridArea=\"main1\" background=\"light-1\" pad=\"medium\" gap=\"medium\">\n      <Heading level=\"3\" margin=\"none\" color=\"brand\">\n        Hey look!, Here's a list of employees\n      </Heading>\n\n      <Button\n        onClick={() => openSideForm(null)}\n        label=\"Create\"\n        alignSelf=\"end\"\n        icon={<UserAdd />}\n      />\n\n      <DataTable\n        background={['light-4', 'controls']}\n        columns={[\n          { property: 'userId', header: 'ID', primary: true },\n          { property: 'jobTitle', header: 'Job Title' },\n          { property: 'firstName', header: 'First Name' },\n          { property: 'lastName', header: 'Last Name' },\n          { property: 'employeeCode', header: 'Code' },\n          { property: 'region', header: 'Region' },\n          { property: 'phoneNumber', header: 'Phone Number' },\n          { property: 'emailAddress', header: 'Email' },\n          {\n            property: 'actions',\n            header: <Actions />,\n            render: (employee) => (\n              <Box pad={{ vertical: 'xsmall' }} direction=\"row\">\n                <Button\n                  type=\"button\"\n                  margin=\"none\"\n                  hoverIndicator\n                  icon={<FormEdit color=\"brand\" />}\n                  onClick={() => openSideForm(employee.userId)}\n                  plain\n                  color=\"status-critical\"\n                />\n                <Button\n                  type=\"button\"\n                  margin=\"none\"\n                  hoverIndicator\n                  icon={<FormClose color=\"brand\" />}\n                  onClick={() => props.removeEmployee(employee.userId)}\n                  plain\n                  color=\"status-critical\"\n                />\n              </Box>\n            ),\n          },\n        ]}\n        data={props.employees}\n        margin=\"medium\"\n      />\n    </Box>\n  );\n};\n\nEmployees.propTypes = {\n  employees: PropTypes.array,\n  setSelectedEmployeeId: PropTypes.func,\n  openSideForm: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.root.employees,\n});\n\nconst actions = {\n  openSideForm,\n  setSelectedEmployeeId,\n  removeEmployee,\n};\n\nexport default connect(mapStateToProps, actions)(Employees);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Box, Button, Form, FormField, Grid, Select, TextInput } from 'grommet';\nimport { FormAdd, FormClose, FormTrash } from 'grommet-icons';\nimport {\n  addEmployee,\n  updateEmployee,\n  openSideForm,\n  setSelectedEmployeeId,\n} from '../../redux/actions';\n\nconst defaultValue = {\n  firstName: '',\n  lastName: '',\n  jobTitle: 'Developer',\n  region: 'CA',\n  phoneNumber: '',\n};\n\nexport const FormLayout = (props) => {\n  const [value, setValue] = useState(props.initialValues);\n\n  const onSubmit = (values) => {\n    if (props.initialValues.userId !== undefined) {\n      props.updateEmployee({\n        id: props.initialValues.userId,\n        data: values,\n      });\n    } else {\n      props.addEmployee(values);\n    }\n  };\n  const closeSideForm = () => {\n    props.setSelectedEmployeeId(null);\n    props.openSideForm(false);\n  };\n\n  return (\n    <Box gridArea=\"main2\" background=\"light-1\" pad=\"medium\" gap=\"medium\" fill>\n      <Button\n        type=\"button\"\n        alignSelf=\"end\"\n        margin=\"none\"\n        hoverIndicator\n        icon={<FormClose />}\n        onClick={closeSideForm}\n      />\n\n      <Grid>\n        <Box pad=\"none\">\n          <Form\n            value={value}\n            onChange={(nextValue) => setValue(nextValue)}\n            onReset={() => setValue(defaultValue)}\n            onSubmit={(event) => onSubmit(event.value)}\n          >\n            <Box gap=\"medium\">\n              <FormField name=\"firstName\" label=\"First Name\" required>\n                <TextInput name=\"firstName\" placeholder=\"first name...\" />\n              </FormField>\n\n              <FormField name=\"lastName\" label=\"Last Name\" required>\n                <TextInput name=\"lastName\" placeholder=\"last name...\" />\n              </FormField>\n\n              <FormField name=\"jobTitle\" label=\"Job Title\" required>\n                <Select\n                  name=\"jobTitle\"\n                  placeholder=\"Select a job title\"\n                  options={[\n                    'Developer',\n                    'Program Directory',\n                    'Thecnical Writter',\n                    'Quality Analizer',\n                    'ITO Director',\n                    'Devops',\n                    'Automation',\n                    'Requeriments Engineer',\n                    'Recruiter',\n                  ]}\n                />\n              </FormField>\n\n              <FormField name=\"region\" label=\"Region\" required>\n                <Select\n                  name=\"region\"\n                  placeholder=\"Select a region\"\n                  options={['NA', 'CA', 'SA', 'EU', 'AS', 'OC', 'AF']}\n                />\n              </FormField>\n\n              <FormField name=\"phoneNumber\" label=\"Phone Number\" required>\n                <TextInput name=\"phoneNumber\" placeholder=\"phone number...\" />\n              </FormField>\n\n              <Box direction=\"row\" gap=\"medium\">\n                <Button\n                  type=\"submit\"\n                  primary\n                  label=\"Submit\"\n                  icon={<FormAdd />}\n                />\n                <Button type=\"reset\" label=\"Reset\" icon={<FormTrash />} />\n              </Box>\n            </Box>\n          </Form>\n        </Box>\n      </Grid>\n    </Box>\n  );\n};\n\nFormLayout.propTypes = {\n  selectedEmployee: PropTypes.object,\n  addEmployee: PropTypes.func,\n  updateEmployee: PropTypes.func,\n  setSelectedEmployeeId: PropTypes.func,\n  openSideForm: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  const selectedEmployee = state.root.employees.find((employee) => {\n    return employee.userId === state.root.selectedEmployeeId;\n  });\n\n  return {\n    initialValues: selectedEmployee ? selectedEmployee : defaultValue,\n  };\n};\n\nconst actions = {\n  addEmployee,\n  updateEmployee,\n  setSelectedEmployeeId,\n  openSideForm,\n};\n\nexport default connect(mapStateToProps, actions)(FormLayout);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Grid, Main } from 'grommet';\nimport { connect } from 'react-redux';\nimport Employees from './Employees';\nimport FormLayout from './Form';\n\nfunction ReduxExample(props) {\n  return (\n    <Main pad=\"medium\">\n      <Grid>\n        <Box align=\"stretch\" pad={{ horizontal: 'large' }}>\n          <Grid\n            areas={[\n              { name: 'main1', start: [0, 0], end: [0, 0] },\n              { name: 'main2', start: [1, 0], end: [1, 0] },\n            ]}\n            columns={['auto', 'auto']}\n            rows={['auto']}\n            gap=\"small\"\n            pad=\"medium\"\n            fill\n          >\n            <Employees />\n            {props.formIsOpen && <FormLayout key={props.selectedEmployeeId} />}\n          </Grid>\n        </Box>\n      </Grid>\n    </Main>\n  );\n}\n\nReduxExample.propTypes = {\n  formIsOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  formIsOpen: state.root.formIsOpen,\n  selectedEmployeeId: state.root.selectedEmployeeId\n    ? state.root.selectedEmployeeId\n    : 'none',\n});\n\nconst actions = {};\n\nexport default connect(mapStateToProps, actions)(ReduxExample);\n","import {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n} from 'grommet';\nimport { Close, Edit } from 'grommet-icons';\nimport React from 'react';\n\nfunction Profile({ profile, onRemove }) {\n  return (\n    <Box\n      align=\"stretch\"\n      border={{ color: 'brand', size: 'xsmall' }}\n      pad=\"small\"\n      round=\"medium\"\n      elevation=\"medium\"\n      margin=\"xxsmall\"\n    >\n      <Card background=\"light-1\">\n        <CardHeader pad=\"medium\">\n          <Box direction=\"row\" gap=\"small\">\n            <Avatar src={profile.avatar} size=\"xlarge\" />\n            <Text color=\"controls\" size=\"medium\">\n              {`${profile.first_name} ${profile.last_name}`}\n            </Text>\n          </Box>\n        </CardHeader>\n        <CardBody pad=\"medium\">\n          <Text color=\"default\" size=\"medium\">\n            {profile.email}\n          </Text>\n          <Text color=\"brand\" size=\"small\">\n            {profile.job}\n          </Text>\n        </CardBody>\n        <CardFooter pad={{ horizontal: 'small' }} background=\"light-2\">\n          <Button icon={<Edit color=\"brand\" />} hoverIndicator />\n          <Button\n            icon={<Close color=\"brand\" />}\n            hoverIndicator\n            onClick={() => onRemove(profile.id)}\n          />\n        </CardFooter>\n      </Card>\n    </Box>\n  );\n}\n\nexport default Profile;\n","import {\n  Avatar,\n  Box,\n  Button,\n  Form,\n  FormField,\n  Layer,\n  Select,\n  Text,\n  TextInput,\n} from 'grommet';\nimport { FormAdd, FormTrash, User } from 'grommet-icons';\nimport React, { useState } from 'react';\n\nconst defaultValue = {\n  first_name: '',\n  last_name: '',\n  job: 'Leader',\n  avatar: '',\n};\n\nfunction SidebarLayer({ onClose, handleCreate }) {\n  const [value, setValue] = useState(defaultValue);\n\n  const onSubmit = (values) => {\n    handleCreate({\n      ...values,\n      email: `${values.first_name}.${values.last_name}@reqres.in`,\n    });\n  };\n\n  return (\n    <Layer\n      position=\"left\"\n      full=\"vertical\"\n      modal\n      onEsc={onClose}\n      onClickOutside={onClose}\n    >\n      <Box\n        background=\"harmonie-4\"\n        overflow=\"auto\"\n        fill=\"vertical\"\n        width=\"medium\"\n        pad=\"medium\"\n      >\n        <Box pad={{ vertical: 'medium' }}>\n          <Text size=\"large\">Profile manager</Text>\n        </Box>\n\n        <Form\n          value={value}\n          onChange={(nextValue) => setValue(nextValue)}\n          onReset={() => setValue(defaultValue)}\n          onSubmit={(event) => onSubmit(event.value)}\n        >\n          <Box gap=\"medium\">\n            <FormField name=\"first_name\" label=\"First Name\" required>\n              <TextInput name=\"first_name\" placeholder=\"first name...\" />\n            </FormField>\n\n            <FormField name=\"last_name\" label=\"Last Name\" required>\n              <TextInput name=\"last_name\" placeholder=\"last name...\" />\n            </FormField>\n\n            <FormField name=\"job\" label=\"Job Title\" required>\n              <Select\n                name=\"job\"\n                placeholder=\"Select a job title\"\n                options={[\n                  'Developer',\n                  'Program Directory',\n                  'Thecnical Writter',\n                  'Quality Analizer',\n                  'ITO Director',\n                  'Devops',\n                  'Automation',\n                  'Requeriments Engineer',\n                  'Recruiter',\n                  'Leader',\n                ]}\n              />\n            </FormField>\n\n            <Box direction=\"row\" gap=\"small\">\n              <FormField name=\"avatar\" label=\"Avatar\" required>\n                <TextInput name=\"avatar\" placeholder=\"avatar url...\" />\n              </FormField>\n\n              {value.avatar ? (\n                <Avatar src={value.avatar} />\n              ) : (\n                <Avatar background=\"neutral-4\">\n                  <User color=\"brand\" />\n                </Avatar>\n              )}\n            </Box>\n\n            <Box direction=\"row\" gap=\"medium\">\n              <Button type=\"submit\" primary label=\"Submit\" icon={<FormAdd />} />\n              <Button type=\"reset\" label=\"Reset\" icon={<FormTrash />} />\n            </Box>\n          </Box>\n        </Form>\n      </Box>\n    </Layer>\n  );\n}\n\nexport default SidebarLayer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst appState = {\n  profiles: [],\n};\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState: appState,\n  reducers: {\n    setData: (state, action) => {\n      state.profiles = action.payload;\n    },\n\n    addUser: (state, action) => {\n      state.profiles.push(action.payload);\n    },\n\n    updateUser: (state, action) => {\n      let profile = state.profiles.find(\n        (profile) => profile.id === action.payload.id\n      );\n      if (profile) {\n        profile = { ...profile, ...action.payload.data };\n      }\n    },\n\n    removeUser: (state, action) => {\n      const index = state.profiles.findIndex(\n        (profile) => profile.id === action.payload\n      );\n      state.profiles.splice(index, 1);\n    },\n  },\n});\n\nexport const { setData, addUser, updateUser, removeUser } = appSlice.actions;\nexport default appSlice;\n","import { Box, Button, Grid } from 'grommet';\nimport { Apps } from 'grommet-icons';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Profile from './Profile';\nimport SidebarLayer from './SidebarLayer';\nimport { fetchData, onCreate, onRemove, onUpdate } from './thunks';\nimport { setData } from '../../redux/reducers/appSlice';\n\nfunction Profiles() {\n  const [openSidebar, setOpenSidebar] = useState(false);\n  const profiles = useSelector((state) => state.app.profiles);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(fetchData());\n    }, 500);\n\n    return () => {\n      /**\n       * Clear the timer, or you'll get an error\n       * timer will continue working even after component\n       * has been unmounted, to avoid that lacky of memory, we use\n       * the cleaunp of useEffect\n       */\n      clearTimeout(timer);\n\n      console.log('Removing profiles for testing purpose.');\n      dispatch(setData([]));\n    };\n  }, [dispatch]);\n\n  const handleCreate = (values) => {\n    dispatch(onCreate(values));\n  };\n\n  const handleUpdate = (id, values) => {\n    dispatch(onUpdate(id, values));\n  };\n\n  const handleRemove = (id) => {\n    dispatch(onRemove(id));\n  };\n\n  return (\n    <Grid>\n      <Box align=\"start\">\n        <Button\n          icon={<Apps size=\"large\" />}\n          hoverIndicator={true}\n          onClick={() => setOpenSidebar((isOpen) => !isOpen)}\n          margin=\"medium\"\n        />\n      </Box>\n\n      <Box pad=\"xsmall\" direction=\"row-responsive\" gap=\"medium\" wrap>\n        {profiles.map((profile) => {\n          return (\n            <Profile\n              key={profile.id}\n              profile={profile}\n              onRemove={handleRemove}\n            />\n          );\n        })}\n      </Box>\n\n      {openSidebar && (\n        <SidebarLayer\n          onClose={() => setOpenSidebar(false)}\n          handleCreate={handleCreate}\n          handleUpdate={handleUpdate}\n        />\n      )}\n    </Grid>\n  );\n}\n\nexport default Profiles;\n","import Axios from 'axios';\nimport {\n  setData,\n  addUser,\n  updateUser,\n  removeUser,\n} from '../../redux/reducers/appSlice';\n\nexport function fetchData() {\n  return (dispatch) => {\n    Axios.get('https://reqres.in/api/users')\n      .then(({ data: { data } }) => {\n        const modifiedData = data.map((item) => {\n          return {\n            ...item,\n            job: 'Developer',\n          };\n        });\n        dispatch(setData(modifiedData));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n}\n\nexport function onCreate(payload) {\n  return (dispatch) => {\n    Axios.post('https://reqres.in/api/users', {\n      ...payload,\n    })\n      .then(({ data }) => {\n        dispatch(addUser(data));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n}\n\nexport function onUpdate(id, payload) {\n  return (dispatch) => {\n    Axios.post(`https://reqres.in/api/users/${id}`, {\n      ...payload,\n    })\n      .then(({ data }) => {\n        dispatch(updateUser({ id, data }));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n}\n\nexport function onRemove(id, payload) {\n  return (dispatch) => {\n    Axios.delete(`https://reqres.in/api/users/${id}`, {\n      ...payload,\n    })\n      .then(() => {\n        dispatch(removeUser(id));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n}\n","import { Box, Grid, Main } from 'grommet';\nimport React from 'react';\nimport Profiles from './Profiles';\n\nfunction ReduxToolkit() {\n  return (\n    <Main pad=\"medium\">\n      <Grid>\n        <Box align=\"stretch\" pad={{ horizontal: 'large' }}>\n          <Grid\n            areas={[\n              { name: 'main1', start: [0, 0], end: [0, 0] },\n              { name: 'main2', start: [1, 0], end: [1, 0] },\n            ]}\n            columns={['auto', 'auto']}\n            rows={['auto']}\n            gap=\"small\"\n            pad=\"medium\"\n            fill\n          >\n            <Profiles />\n          </Grid>\n        </Box>\n      </Grid>\n    </Main>\n  );\n}\n\nexport default ReduxToolkit;\n","import Axios from 'axios';\nimport { Box, DataTable, Heading, Text } from 'grommet';\nimport { StatusDisabled, StatusGood } from 'grommet-icons';\nimport React, { useEffect, useState } from 'react';\nimport Spinner from '../../Components/Grommet/Spinner';\n\nfunction Products() {\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(false);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setError(false);\n      setLoading(true);\n\n      try {\n        const { data } = await Axios.get(\n          `https://gorest.co.in/public-api/products`\n        );\n        setProducts(data.data);\n      } catch (error) {\n        setError(true);\n        console.error(error);\n      }\n      setLoading(false);\n    };\n    fetchProducts();\n\n    return () => {\n      console.log(\n        \"Goodbye, I'm going to clean up. Say goodbye to your data :(\"\n      );\n    };\n  }, []);\n\n  return (\n    <>\n      {isError && (\n        <Heading margin=\"medium\" color=\"status-critial\">\n          Oops!!! an error has ocurred :(\n        </Heading>\n      )}\n      {isLoading ? (\n        <Box pad=\"large\" margin=\"large\">\n          <Spinner />\n        </Box>\n      ) : (\n        <DataTable\n          background={{\n            header: 'brand',\n            body: ['white', 'light-1'],\n            footer: 'dark-3',\n          }}\n          columns={[\n            {\n              property: 'id',\n              header: <Text>Id</Text>,\n              render: (datum) => <Text size=\"small\">{datum.id}</Text>,\n              primary: true,\n            },\n            {\n              property: 'name',\n              header: <Text>Name</Text>,\n              render: (datum) => <Text size=\"small\">{datum.name}</Text>,\n            },\n            // {\n            //   property: 'description',\n            //   header: <Text>Description</Text>,\n            //   render: (datum) => <Text size=\"small\">{datum.description}</Text>,\n            // },\n            // {\n            //   property: 'image',\n            //   header: <Text>Preview</Text>,\n            //   render: (datum) => (\n            //     <Box height=\"xsmall\" width=\"xxsmall\">\n            //       <Image fit=\"cover\" src={datum.image} />\n            //     </Box>\n            //   ),\n            // },\n            {\n              property: 'price',\n              header: <Text>Price</Text>,\n              render: (datum) => <Text size=\"small\">$ {datum.price}</Text>,\n            },\n            {\n              property: 'discount_amount',\n              header: <Text>Discount Amount</Text>,\n              render: (datum) => (\n                <Text size=\"small\">$ {datum.discount_amount}</Text>\n              ),\n            },\n            {\n              property: 'status',\n              header: <Text>Status</Text>,\n              render: (datum) =>\n                datum.status ? (\n                  <StatusGood color=\"brand\" size=\"medium\" />\n                ) : (\n                  <StatusDisabled color=\"default\" size=\"medium\" />\n                ),\n            },\n          ]}\n          data={products}\n        />\n      )}\n    </>\n  );\n}\n\nexport default Products;\n","import Axios from 'axios';\nimport { Box, DataTable, Heading, Text } from 'grommet';\nimport { StatusDisabled, StatusGood } from 'grommet-icons';\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport Spinner from '../../Components/Grommet/Spinner';\n\nfunction Products2() {\n  const {\n    // status,\n    // isFetching,\n    isLoading,\n    error: queryError,\n    data: products,\n  } = useQuery('fetchProducts', async () => {\n    const { data } = await Axios.get(\n      `https://gorest.co.in/public-api/products`\n    );\n    return data.data;\n  });\n\n  return (\n    <>\n      {queryError && (\n        <Heading margin=\"medium\" color=\"status-critial\">\n          Oops!!! an error has ocurred :(\n        </Heading>\n      )}\n      {isLoading ? (\n        <Box pad=\"large\" margin=\"large\">\n          <Spinner />\n        </Box>\n      ) : (\n        <DataTable\n          background={{\n            header: 'harmonie-5',\n            body: ['white', 'harmonie-1'],\n            footer: 'dark-3',\n          }}\n          columns={[\n            {\n              property: 'id',\n              header: <Text>Id</Text>,\n              render: (datum) => <Text size=\"small\">{datum.id}</Text>,\n              primary: true,\n            },\n            {\n              property: 'name',\n              header: <Text>Name</Text>,\n              render: (datum) => <Text size=\"small\">{datum.name}</Text>,\n            },\n            // {\n            //   property: 'description',\n            //   header: <Text>Description</Text>,\n            //   render: (datum) => <Text size=\"small\">{datum.description}</Text>,\n            // },\n            // {\n            //   property: 'image',\n            //   header: <Text>Preview</Text>,\n            //   render: (datum) => (\n            //     <Box height=\"xsmall\" width=\"xxsmall\">\n            //       <Image fit=\"cover\" src={datum.image} />\n            //     </Box>\n            //   ),\n            // },\n            {\n              property: 'price',\n              header: <Text>Price</Text>,\n              render: (datum) => <Text size=\"small\">$ {datum.price}</Text>,\n            },\n            {\n              property: 'discount_amount',\n              header: <Text>Discount Amount</Text>,\n              render: (datum) => (\n                <Text size=\"small\">$ {datum.discount_amount}</Text>\n              ),\n            },\n            {\n              property: 'status',\n              header: <Text>Status</Text>,\n              render: (datum) =>\n                datum.status ? (\n                  <StatusGood color=\"brand\" size=\"medium\" />\n                ) : (\n                  <StatusDisabled color=\"default\" size=\"medium\" />\n                ),\n            },\n          ]}\n          data={products}\n        />\n      )}\n    </>\n  );\n}\n\nexport default Products2;\n","import {\n  Box,\n  Button,\n  CheckBox,\n  Form,\n  FormField,\n  Heading,\n  MaskedInput,\n  RadioButtonGroup,\n  TextInput,\n} from 'grommet';\nimport { Close, UserAdd } from 'grommet-icons';\nimport React from 'react';\n\nfunction FormUser({ onSubmit, onClose }) {\n  return (\n    <Box fill=\"vertical\" overflow=\"auto\" width=\"medium\" pad=\"medium\">\n      <Form\n        onSubmit={onSubmit}\n        // onChange={(prop) => console.log('onChange', prop)}\n      >\n        <Box flex={false} direction=\"row\" justify=\"between\">\n          <Heading level={3} margin=\"none\">\n            <UserAdd size=\"medium\" color=\"harmonie-3\" /> Add User\n          </Heading>\n          <Button icon={<Close />} onClick={onClose} />\n        </Box>\n\n        <Box flex=\"grow\" overflow=\"auto\" pad={{ vertical: 'medium' }}>\n          <FormField name=\"name\" label=\"Name\">\n            <TextInput name=\"name\" />\n          </FormField>\n\n          <FormField label=\"Email\" name=\"email\" required>\n            <MaskedInput\n              name=\"email\"\n              mask={[\n                { regexp: /^[\\w\\-_.]+$/, placeholder: 'example' },\n                { fixed: '@' },\n                { regexp: /^[\\w]+$/, placeholder: 'my' },\n                { fixed: '.' },\n                { regexp: /^[\\w]+$/, placeholder: 'com' },\n              ]}\n            />\n          </FormField>\n\n          <FormField name=\"gender\">\n            <RadioButtonGroup name=\"gender\" options={['Male', 'Female']} />\n          </FormField>\n\n          <FormField name=\"status\">\n            <CheckBox name=\"status\" label=\"Active?\" />\n          </FormField>\n        </Box>\n\n        <Box\n          flex={false}\n          as=\"footer\"\n          align=\"start\"\n          direction=\"row\"\n          gap=\"medium\"\n        >\n          <Button type=\"submit\" primary label=\"Submit\" />\n          <Button type=\"reset\" label=\"Reset\" />\n        </Box>\n      </Form>\n    </Box>\n  );\n}\n\nexport default FormUser;\n","import Axios from 'axios';\nimport { Box, Button, DataTable, Heading, Layer, Text } from 'grommet';\nimport { Dislike, Like, Sync, User, UserAdd, UserFemale } from 'grommet-icons';\nimport { DateTime } from 'luxon';\nimport React, { useState } from 'react';\nimport { useQuery, useMutation, queryCache } from 'react-query';\nimport Spinner from '../../../Components/Grommet/Spinner';\nimport { token } from '../utils';\nimport FormUser from './FormUser';\n\nfunction Users() {\n  // Hooks first...\n  const [open, setOpen] = useState(false);\n\n  const {\n    // status,\n    // isFetching,\n    isLoading,\n    error: queryError,\n    data: users,\n  } = useQuery('fetchUsers', async () => {\n    const { data } = await Axios.get(\n      `https://gorest.co.in/public-api/users?page=70`\n    );\n    return data.data;\n  });\n\n  const [postUser] = useMutation(\n    (data) =>\n      Axios.post('https://gorest.co.in/public-api/users', data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }),\n    {\n      onSuccess: () => {\n        // Query Invalidations\n        queryCache.invalidateQueries('fetchUsers');\n\n        onClose();\n        console.log('User created successfully');\n        console.info(\n          '%c Invalidating cache. React-Query will refetch data again to sincronize with server.',\n          'background: #222; color: #bada55'\n        );\n      },\n      onError: (error) => {\n        console.error(error);\n      },\n    }\n  );\n\n  const onOpen = () => setOpen(true);\n  const onClose = () => setOpen(undefined);\n\n  const onSubmit = (values) => {\n    console.log('values', values);\n    postUser({\n      ...values,\n      status: values.status ? 'Active' : 'Inactive',\n    });\n  };\n\n  const onRefresh = () => {\n    // Query Invalidations\n    queryCache.invalidateQueries('fetchUsers');\n  };\n\n  return (\n    <>\n      {queryError && (\n        <Heading margin=\"medium\" color=\"status-critial\">\n          Oops!!! an error has ocurred :(\n        </Heading>\n      )}\n      {isLoading ? (\n        <Box pad=\"large\" margin=\"large\">\n          <Spinner />\n        </Box>\n      ) : (\n        <>\n          <Box direction=\"row\" gap=\"medium\" margin={{ vertical: 'medium' }}>\n            <Button icon={<UserAdd />} label=\"Add User\" onClick={onOpen} />\n            <Button icon={<Sync />} label=\"Refresh Data\" onClick={onRefresh} />\n          </Box>\n\n          <DataTable\n            background={{\n              header: 'controls',\n              body: ['white', 'light-2'],\n              footer: 'dark-3',\n            }}\n            columns={[\n              {\n                property: 'id',\n                header: <Text>Id</Text>,\n                render: (datum) => <Text size=\"small\">{datum.id}</Text>,\n                primary: true,\n              },\n              {\n                property: 'name',\n                header: <Text>Name</Text>,\n                render: (datum) => <Text size=\"small\">{datum.name}</Text>,\n              },\n              // {\n              //   property: 'description',\n              //   header: <Text>Description</Text>,\n              //   render: (datum) => <Text size=\"small\">{datum.description}</Text>,\n              // },\n              // {\n              //   property: 'image',\n              //   header: <Text>Preview</Text>,\n              //   render: (datum) => (\n              //     <Box height=\"xsmall\" width=\"xxsmall\">\n              //       <Image fit=\"cover\" src={datum.image} />\n              //     </Box>\n              //   ),\n              // },\n              {\n                property: 'email',\n                header: <Text>Email</Text>,\n                render: (datum) => <Text size=\"small\">{datum.email}</Text>,\n              },\n              {\n                property: 'gender',\n                header: <Text>Gender</Text>,\n                render: (datum) =>\n                  datum.gender === 'Male' ? (\n                    <User color=\"brand\" size=\"medium\" />\n                  ) : (\n                    <UserFemale color=\"secondary\" size=\"medium\" />\n                  ),\n              },\n              {\n                property: 'created_at',\n                header: <Text>Created At</Text>,\n                render: (datum) => (\n                  <Text size=\"small\">\n                    {DateTime.fromISO(datum.created_at).toLocaleString(\n                      DateTime.DATETIME_MED\n                    )}\n                  </Text>\n                ),\n              },\n              {\n                property: 'updated_at',\n                header: <Text>Updated At</Text>,\n                render: (datum) => (\n                  <Text size=\"small\">\n                    {DateTime.fromISO(datum.updated_at).toLocaleString(\n                      DateTime.DATETIME_MED\n                    )}\n                  </Text>\n                ),\n              },\n              {\n                property: 'status',\n                header: <Text>Status</Text>,\n                render: (datum) =>\n                  datum.status === 'Active' ? (\n                    <Like color=\"brand\" size=\"medium\" />\n                  ) : (\n                    <Dislike color=\"default\" size=\"medium\" />\n                  ),\n              },\n            ]}\n            data={users}\n          />\n        </>\n      )}\n\n      {open && (\n        <Layer\n          position=\"right\"\n          full=\"vertical\"\n          modal\n          onClickOutside={onClose}\n          onEsc={onClose}\n        >\n          <FormUser\n            onSubmit={({ value }) => onSubmit(value)}\n            onClose={onClose}\n          />\n        </Layer>\n      )}\n    </>\n  );\n}\n\nexport default Users;\n","export const token =\n  '6cabfd3fc1aa17546fbfac4e0796907906638b74fe780efebf1eb803baa1e31c';\n","import React from 'react';\nimport { Tab, Tabs } from 'grommet';\nimport { GraphQl, Reactjs } from 'grommet-icons';\nimport Products from './Products';\nimport Products2 from './Products2';\nimport Users from './Users';\n\nfunction ReactQuery() {\n  return (\n    <Tabs margin=\"medium\">\n      <Tab title=\"REST Products (useEffect)\" margin=\"medium\" icon={<Reactjs />}>\n        <Products />\n      </Tab>\n      <Tab\n        title=\"REST Products (React-Query)\"\n        margin=\"medium\"\n        icon={<GraphQl />}\n      >\n        <Products2 />\n      </Tab>\n      <Tab title=\"REST Users (React-Query)\" margin=\"medium\" icon={<GraphQl />}>\n        <Users />\n      </Tab>\n    </Tabs>\n  );\n}\n\nexport default ReactQuery;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardBody,\n  CardHeader,\n  Grid,\n  Heading,\n  Image,\n  Stack,\n  Text,\n} from 'grommet';\nimport React from 'react';\n\nconst avatarSrc =\n  '//s.gravatar.com/avatar/b7fb138d53ba0f573212ccce38a7c43b?s=80';\n\nfunction BaseList({ items }) {\n  return (\n    <Box pad=\"xxsmall\" height=\"medium\">\n      <Grid\n        gap=\"medium\"\n        rows=\"medium\"\n        columns={{ count: 'fit', size: ['small', 'medium'] }}\n      >\n        {items.map((item) => (\n          <Card width=\"medium\" key={item.id}>\n            {/* Stacked CardBody and CardHeader on top of each other \n      in that order */}\n            <Stack anchor=\"bottom-left\">\n              <CardBody height=\"medium\">\n                <Image\n                  fit=\"cover\"\n                  src={item.image.file.url}\n                  a11yTitle=\"item reference image\"\n                />\n              </CardBody>\n              <CardHeader\n                pad={{ horizontal: 'small', vertical: 'small' }}\n                // https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4#all-hex-value-from-100-to-0-alpha\n                background=\"#000000A0\"\n                width=\"medium\"\n                justify=\"start\"\n              >\n                <Avatar src={avatarSrc} a11yTitle=\"avatar\" />\n                <Box>\n                  <Heading level=\"3\" margin=\"none\">\n                    {item.title}\n                  </Heading>\n                  {/* <Text size=\"small\">{item.skillLevel}</Text> */}\n                </Box>\n              </CardHeader>\n            </Stack>\n          </Card>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nexport default BaseList;\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchContext = createContext();\n\nconst SearchProvider = (props) => {\n  const [searchString, setSearchString] = useState('');\n\n  return (\n    <SearchContext.Provider value={[searchString, setSearchString]}>\n      {props.children}\n    </SearchContext.Provider>\n  );\n};\n\nSearchProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default SearchProvider;\n","import * as contentful from 'contentful';\n\nexport const BASE_URL = 'https://cdn.contentful.com';\nexport const ENVIRONMENT = 'master';\nexport const SPACE_ID = 'srlpekq85luo';\nexport const ACCESS_TOKEN = 'evMFF1eK--2PX6Qqrlq8glrKOurVH1pdvaI-FRgmufU';\n\nexport const client = contentful.createClient({\n  space: SPACE_ID,\n  accessToken: ACCESS_TOKEN,\n});\n\nexport async function getEntries(query) {\n  try {\n    const entries = await client.getEntries(query);\n    switch (query.content_type) {\n      case 'course':\n        return coursesTransformer(entries.items);\n      case 'records':\n        return recordsTransformer(entries.items);\n      case 'movies':\n        return moviesTransformer(entries.items);\n      default:\n        return [];\n    }\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport function coursesTransformer(courses) {\n  return dataTransformer(courses).map((item) => ({\n    ...item,\n    image: {\n      ...item.image.fields,\n      id: item.image.sys.id,\n    },\n  }));\n}\n\nexport function recordsTransformer(records) {\n  return dataTransformer(records).map((item) => ({\n    ...item,\n    image: {\n      ...item.image.fields,\n      id: item.image.sys.id,\n    },\n    tracklist: item.tracklist.map((track) => ({\n      ...track.fields,\n      id: track.sys.id,\n    })),\n  }));\n}\n\nexport function moviesTransformer(movies) {\n  return dataTransformer(movies).map((item) => ({\n    ...item,\n    image: {\n      ...item.poster.fields,\n      id: item.poster.sys.id,\n    },\n    cast: item.cast.map((actor) => ({\n      ...actor.fields,\n      id: actor.sys.id,\n    })),\n  }));\n}\n\nexport function dataTransformer(data) {\n  return data.map(({ fields, sys }) => ({\n    ...fields,\n    id: sys.id,\n    createdAt: sys.createdAt,\n  }));\n}\n","import Axios from 'axios';\nimport React, { useState, useCallback, useEffect, useContext } from 'react';\nimport BaseList from '../Components/BaseList';\nimport { SearchContext } from '../Context/SearchContext';\nimport {\n  ACCESS_TOKEN,\n  BASE_URL,\n  ENVIRONMENT,\n  SPACE_ID,\n  coursesTransformer,\n  getEntries,\n} from '../sdk';\n\nconst contentType = 'course';\nconst searchField = 'title';\n\nfunction Courses() {\n  const [courses, setCourses] = useState([]);\n  const [searchString] = useContext(SearchContext);\n\n  const retrieveCourses = useCallback(async () => {\n    // const { data } = await Axios.get(\n    //   `${BASE_URL}/spaces/${SPACE_ID}/environments/${ENVIRONMENT}/entries?access_token=${ACCESS_TOKEN}&content_type=${contentType}&fields.${searchField}[match]=${searchString}`\n    // );\n    // const entries = coursesTransformer(data.items);\n\n    const entries = await getEntries({\n      content_type: 'course',\n      'fields.title[match]': searchString,\n    });\n\n    console.log(\n      `%cCourses fetched using... \"${searchString}\":`,\n      'background: #ccc; color: #444;',\n      entries\n    );\n\n    setCourses(entries);\n  }, [searchString]);\n\n  useEffect(() => {\n    retrieveCourses();\n  }, [retrieveCourses]);\n\n  return <BaseList items={courses} />;\n}\n\nexport default Courses;\n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { SearchContext } from '../Context/SearchContext';\nimport { getEntries } from '../sdk';\nimport BaseList from '../Components/BaseList';\n\nfunction Records() {\n  const [records, setRecords] = useState([]);\n  const [searchString] = useContext(SearchContext);\n\n  const retrieveRecords = useCallback(async () => {\n    const entries = await getEntries({\n      content_type: 'records',\n      'fields.title[match]': searchString,\n    });\n\n    console.log(\n      `%cRecords fetched using... \"${searchString}\":`,\n      'background: #ccc; color: #444;',\n      entries\n    );\n\n    setRecords(entries);\n  }, [searchString]);\n\n  useEffect(() => {\n    retrieveRecords();\n  }, [retrieveRecords]);\n\n  return <BaseList items={records} />;\n}\n\nexport default Records;\n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport BaseList from '../Components/BaseList';\nimport { SearchContext } from '../Context/SearchContext';\nimport { getEntries } from '../sdk';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchString] = useContext(SearchContext);\n\n  const retrieveMovies = useCallback(async () => {\n    const entries = await getEntries({\n      content_type: 'movies',\n      'fields.title[match]': searchString,\n    });\n\n    console.log(\n      `%cMovies fetched using... \"${searchString}\":`,\n      'background: #ccc; color: #444;',\n      entries\n    );\n\n    setMovies(entries);\n  }, [searchString]);\n\n  useEffect(() => {\n    retrieveMovies();\n  }, [retrieveMovies]);\n\n  return <BaseList items={movies} />;\n}\n\nexport default Movies;\n","import { Box, Nav, Text, TextInput } from 'grommet';\nimport { Search } from 'grommet-icons';\nimport React, { useContext } from 'react';\nimport { SearchContext } from '../Context/SearchContext';\n\nfunction SearchBar() {\n  const [, setSearchString] = useContext(SearchContext);\n\n  return (\n    <Nav direction=\"row\" background=\"brand\" pad=\"medium\">\n      <Box direction=\"row\" align=\"center\" gap=\"medium\">\n        <Text>ReactJs / Contentful</Text>\n      </Box>\n\n      <TextInput\n        icon={<Search />}\n        placeholder=\"search ...\"\n        onChange={(event) => setSearchString(event.target.value || '')}\n      />\n    </Nav>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Tab, Tabs } from 'grommet';\nimport { Spotify, System, Ticket } from 'grommet-icons';\nimport { useLocation } from 'react-router-dom';\nimport Courses from './Courses';\nimport Records from './Records';\nimport Movies from './Movies';\nimport SearchProvider from './Context/SearchContext';\nimport SearchBar from './Components/SearchBar';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction Contentful() {\n  let query = useQuery();\n\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  // To access the query params from a url, we need to use the react router useLocation hook.\n  let activeIndex = 0;\n  switch (query.get('tab')) {\n    case 'records':\n      activeIndex = 1;\n      break;\n    case 'movies':\n      activeIndex = 2;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <SearchProvider>\n      <SearchBar />\n\n      <Tabs margin=\"medium\" activeIndex={activeIndex}>\n        <Tab title=\"REST Courses (useEffect)\" margin=\"medium\" icon={<System />}>\n          <Courses />\n        </Tab>\n        <Tab\n          title=\"REST Records (React-Query)\"\n          margin=\"medium\"\n          icon={<Spotify />}\n        >\n          <Records />\n        </Tab>\n        <Tab\n          title=\"REST Movies (Contentful SDK)\"\n          margin=\"medium\"\n          icon={<Ticket />}\n        >\n          <Movies />\n        </Tab>\n      </Tabs>\n    </SearchProvider>\n  );\n}\n\nexport default Contentful;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Main from '../../Containers/Main';\nimport StateVsProps from '../../Containers/StateVsProps';\nimport ThinkingInReact from '../../Containers/ThinkingInReact';\nimport JSXExample from '../../Containers/JSXExample';\nimport TodoExample from '../../Containers/TodoExample';\nimport APIInteractions from '../../Containers/APIInteractions';\nimport ReduxExample from '../../Containers/ReduxExample';\nimport ReduxToolkit from '../../Containers/ReduxToolkit';\nimport ReactQuery from '../../Containers/ReactQuery';\nimport Contentful from '../../Containers/Contentful';\nimport NoMatch from './NoMatch';\n\n/**\n * Home will be <Main> component, to avoid matching to\n * routes, we use \"exact\" prop\n * All routes matched that are not configured, will redirect\n * to an error page.\n */\nfunction Routing() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <Main />\n        </Route>\n        <Route path=\"/jsx\">\n          <JSXExample />\n        </Route>\n        <Route path=\"/thinking-in-react\">\n          <ThinkingInReact />\n        </Route>\n        <Route path=\"/state-vs-props\">\n          <StateVsProps />\n        </Route>\n        <Route path=\"/todos\">\n          <TodoExample />\n        </Route>\n        <Route path=\"/apis\">\n          <APIInteractions />\n        </Route>\n        <Route path=\"/redux\">\n          <ReduxExample />\n        </Route>\n        <Route path=\"/redux-toolkit\">\n          <ReduxToolkit />\n        </Route>\n        <Route path=\"/react-query\">\n          <ReactQuery />\n        </Route>\n        <Route path=\"/contentful\">\n          <Contentful />\n        </Route>\n        <Route path=\"*\">\n          <NoMatch />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Routing;\n","import React from 'react';\nimport {\n  CloudSoftware,\n  Code,\n  Connect,\n  GraphQl,\n  Home,\n  Html5,\n  Node,\n  Reactjs,\n  Task,\n  VmMaintenance,\n} from 'grommet-icons';\n\nexport const routes = [\n  {\n    to: '/',\n    icon: <Home color=\"light-1\" />,\n    text: 'Home',\n  },\n  {\n    to: '/jsx',\n    icon: <Html5 color=\"light-1\" />,\n    text: 'JSX',\n  },\n  {\n    to: '/thinking-in-react',\n    icon: <Reactjs color=\"light-1\" />,\n    text: 'Thinking in React',\n  },\n  {\n    to: '/state-vs-props',\n    icon: <Code color=\"light-1\" />,\n    text: 'State vs Props',\n  },\n  {\n    to: '/todos',\n    icon: <Task color=\"light-1\" />,\n    text: 'Todo List',\n  },\n  {\n    to: '/apis',\n    icon: <Node color=\"light-1\" />,\n    text: 'API Interactions',\n  },\n  {\n    to: '/redux',\n    icon: <Connect color=\"light-1\" />,\n    text: 'Redux',\n  },\n  {\n    to: '/redux-toolkit',\n    icon: <VmMaintenance color=\"light-1\" />,\n    text: 'Redux Toolkit',\n  },\n  {\n    to: '/react-query',\n    icon: <GraphQl color=\"light-1\" />,\n    text: 'React Query',\n  },\n  {\n    to: '/contentful',\n    icon: <CloudSoftware color=\"light-1\" />,\n    text: 'Contentful',\n  },\n];\n","import { Box, Text } from 'grommet';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { routes } from './utils';\n\nfunction Menu() {\n  return (\n    <Box pad={{ horizontal: 'medium', vertical: 'small' }}>\n      {routes.map((route) => {\n        return (\n          <Box key={route.to} pad={{ horizontal: 'medium', vertical: 'small' }}>\n            <Link to={route.to} title={route.text}>\n              {route.icon}\n              <Text size=\"large\" color=\"light-1\" margin=\"small\">\n                {route.text}\n              </Text>\n            </Link>\n          </Box>\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport { Nav } from 'grommet';\nimport { Link } from 'react-router-dom';\nimport { routes } from './utils';\n\nfunction NavBar() {\n  return (\n    <Nav direction=\"row\">\n      {routes.map((route) => {\n        return (\n          <Link key={route.to} to={route.to} title={route.text}>\n            {route.icon}\n          </Link>\n        );\n      })}\n    </Nav>\n  );\n}\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Collapsible,\n  Grommet,\n  Heading,\n  Layer,\n  ResponsiveContext,\n} from 'grommet';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Apps, FormClose } from 'grommet-icons';\nimport { ReactQueryDevtools } from 'react-query-devtools';\nimport Routing from './Components/Routing';\nimport Menu from './Components/Routing/Menu';\nimport NavBar from './Components/Routing/NavBar';\n\nconst theme = {\n  global: {\n    colors: {\n      primary: '#ee4540',\n      secondary: '#c72c41',\n      brand: '#801336',\n      controls: '#510a32',\n      default: '#2d142c',\n      'harmonie-1': '#dfc4cd',\n      'harmonie-2': '#c08a9b',\n      'harmonie-3': '#906774',\n      'harmonie-4': '#600e28',\n      'harmonie-5': '#400a1b',\n      'harmonie-6': '#300714',\n      'complement-1': '#136c80',\n      'complement-2': '#13805d',\n    },\n    font: {\n      family: 'sans-serif',\n      size: '18px',\n      height: '20px',\n    },\n  },\n  card: {\n    container: {\n      elevation: 'large',\n    },\n    footer: {\n      pad: 'medium',\n    },\n  },\n};\n\nconst AppBar = (props) => (\n  <Box\n    tag=\"header\"\n    direction=\"row\"\n    align=\"center\"\n    justify=\"between\"\n    background=\"brand\"\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation=\"medium\"\n    style={{ zIndex: '1' }}\n    {...props}\n  />\n);\n\nfunction App() {\n  console.log(\n    '%c //s.gravatar.com/avatar/b7fb138d53ba0f573212ccce38a7c43b?s=80',\n    'background: lightgreen; color: gray;'\n  );\n  console.log(\n    '%c Use breaking bad characters avatar',\n    'background: cyan; color: darkblue;'\n  );\n  console.log(\n    '%c https://vinicius73.github.io/gravatar-url-generator/#/',\n    'background: lightblue; color: darkred;'\n  );\n\n  const [showSidebar, setShowSidebar] = useState(false);\n\n  return (\n    <>\n      <Router>\n        <Grommet theme={theme} full>\n          <ResponsiveContext.Consumer>\n            {(size) => (\n              <Box fill>\n                <AppBar>\n                  <Heading level=\"4\" margin=\"none\">\n                    Hey look!, I'm using Groomet\n                  </Heading>\n\n                  <NavBar />\n\n                  <Button\n                    icon={<Apps />}\n                    onClick={() => setShowSidebar(!showSidebar)}\n                  />\n                </AppBar>\n\n                <Box direction=\"row\" flex overflow={{ horizontal: 'hidden' }}>\n                  <Box flex align=\"baseline\" justify=\"center\" pad=\"medium\">\n                    <Routing />\n                  </Box>\n\n                  {!showSidebar || size !== 'small' ? (\n                    <Collapsible direction=\"horizontal\" open={showSidebar}>\n                      <Box\n                        flex\n                        width=\"medium\"\n                        background=\"harmonie-4\"\n                        elevation=\"small\"\n                        align=\"baseline\"\n                        justify=\"center\"\n                        fill=\"vertical\"\n                      >\n                        <Menu />\n                      </Box>\n                    </Collapsible>\n                  ) : (\n                    <Layer>\n                      <Box\n                        background=\"light-2\"\n                        tag=\"header\"\n                        justify=\"end\"\n                        align=\"center\"\n                        direction=\"row\"\n                      >\n                        <Button\n                          icon={<FormClose />}\n                          onClick={() => setShowSidebar(false)}\n                        />\n                      </Box>\n                      <Box\n                        fill\n                        background=\"default\"\n                        align=\"center\"\n                        justify=\"center\"\n                      >\n                        <Menu />\n                      </Box>\n                    </Layer>\n                  )}\n                </Box>\n              </Box>\n            )}\n          </ResponsiveContext.Consumer>\n        </Grommet>\n      </Router>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const employees = [\n  {\n    userId: 'krish',\n    jobTitle: 'Developer',\n    firstName: 'Krish',\n    lastName: 'Lee',\n    employeeCode: 'E1',\n    region: 'CA',\n    phoneNumber: '123456',\n    emailAddress: 'krish.lee@learningcontainer.com',\n  },\n  {\n    userId: 'devid',\n    jobTitle: 'Developer',\n    firstName: 'Devid',\n    lastName: 'Rome',\n    employeeCode: 'E2',\n    region: 'CA',\n    phoneNumber: '1111111',\n    emailAddress: 'devid.rome@learningcontainer.com',\n  },\n  {\n    userId: 'tin',\n    jobTitle: 'Program Directory',\n    firstName: 'Tin',\n    lastName: 'Jonson',\n    employeeCode: 'E3',\n    region: 'CA',\n    phoneNumber: '2222222',\n    emailAddress: 'tin.jonson@learningcontainer.com',\n  },\n  {\n    userId: 'dan',\n    jobTitle: 'Developer',\n    firstName: 'Daniel',\n    lastName: 'Connery',\n    employeeCode: 'E4',\n    region: 'NA',\n    phoneNumber: '9918222',\n    emailAddress: 'daniel.connery@learningcontainer.com',\n  },\n  {\n    userId: 'sally',\n    jobTitle: 'Thecnical Writter',\n    firstName: 'Sally',\n    lastName: 'Vega',\n    employeeCode: 'E6',\n    region: 'NA',\n    phoneNumber: '1118277',\n    emailAddress: 'sally.vega@learningcontainer.com',\n  },\n  {\n    userId: 'mirian',\n    jobTitle: 'Thecnical Writter',\n    firstName: 'Mirian',\n    lastName: 'Branigan',\n    employeeCode: 'E7',\n    region: 'OC',\n    phoneNumber: '1318077',\n    emailAddress: 'mirian.branigan@learningcontainer.com',\n  },\n  {\n    userId: 'marlon',\n    jobTitle: 'ITO Director',\n    firstName: 'Marlon',\n    lastName: 'Wayans',\n    employeeCode: 'E8',\n    region: 'SA',\n    phoneNumber: '8318175',\n    emailAddress: 'marlon.wayans@learningcontainer.com',\n  },\n  {\n    userId: 'kevin',\n    jobTitle: 'Devops',\n    firstName: 'Kevin',\n    lastName: 'Arnold',\n    employeeCode: 'E9',\n    region: 'CA',\n    phoneNumber: '2312175',\n    emailAddress: 'kevin.arnold@learningcontainer.com',\n  },\n  {\n    userId: 'jim',\n    jobTitle: 'Recruiter',\n    firstName: 'Jim',\n    lastName: 'Carrey',\n    employeeCode: 'E5',\n    region: 'CA',\n    phoneNumber: '2352171',\n    emailAddress: 'jim.carrey@learningcontainer.com',\n  },\n  {\n    userId: 'carly',\n    jobTitle: 'Developer',\n    firstName: 'Carly',\n    lastName: 'Smith',\n    employeeCode: 'E10',\n    region: 'NA',\n    phoneNumber: '7752171',\n    emailAddress: 'carly.smith@learningcontainer.com',\n  },\n  {\n    userId: 'brandom',\n    jobTitle: 'Automation',\n    firstName: 'Brandom',\n    lastName: 'Boyd',\n    employeeCode: 'E11',\n    region: 'NA',\n    phoneNumber: '7756173',\n    emailAddress: 'brandom.boyd@learningcontainer.com',\n  },\n  {\n    userId: 'john',\n    jobTitle: 'Requeriments Engineer',\n    firstName: 'John',\n    lastName: 'Frusciante',\n    employeeCode: 'E12',\n    region: 'NA',\n    phoneNumber: '3756173',\n    emailAddress: 'john.frusciante@learningcontainer.com',\n  },\n];\n","import { employees } from '../data';\n\nconst initialState = {\n  employees,\n  selectedEmployeeId: null,\n  formIsOpen: false,\n  lastCode: 15,\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_EMPLOYEE': {\n      const employee = {\n        ...action.payload,\n        userId: action.payload.firstName.toLowerCase(),\n        employeeCode: `E${state.lastCode + 1}`,\n        emailAddress: `${action.payload.firstName.toLowerCase()}.${action.payload.lastName.toLowerCase()}@learningcontainer.com`,\n      };\n\n      return {\n        ...state,\n        employees: state.employees.concat(employee),\n        lastCode: state.lastCode + 1,\n      };\n    }\n\n    case 'UPDATE_EMPLOYEE': {\n      const employees = [...state.employees];\n      const employeeIndex = employees.findIndex(\n        (employee) => employee.userId === action.payload.id\n      );\n      employees[employeeIndex] = {\n        ...employees[employeeIndex],\n        ...action.payload.data,\n      };\n\n      return {\n        ...state,\n        employees,\n      };\n    }\n\n    case 'REMOVE_EMPLOYEE': {\n      return {\n        ...state,\n        employees: state.employees.filter((employee) => {\n          return employee.userId !== action.payload;\n        }),\n      };\n    }\n\n    case 'SET_SELECTED_EMPLOYEE_ID':\n      return {\n        ...state,\n        selectedEmployeeId: action.payload,\n      };\n\n    case 'OPEN_SIDE_FORM':\n      return {\n        ...state,\n        formIsOpen: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './reducers/rootReducer';\nimport appSlice from './reducers/appSlice';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: false,\n    immutableCheck: false,\n  }),\n];\n\nconst reducer = {\n  root: rootReducer,\n  [appSlice.name]: appSlice.reducer,\n};\n\nconst store = configureStore({\n  reducer,\n  middleware,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}